
      
      
      
    
      
      
      
    
      
      
      
    
      
      
      
    
      
      
      
    
      
      
      
    
      
      
      
    
      
      
      
    
      
      
      
    
      
      
      
    
      
      
      
    
      
      
      
    
      
      
      
    
      
      
      
    
      
      
      
    
      
      
      
    
      
      
      
    [{"authors":null,"categories":null,"content":"前言 自打接触互联网以来，密码安全就是一个非常困扰我的问题\n尤其是自从被“神人”破解了我设置的qbittorrent密码并顺手安装了个肉鸡程序后变得记忆深刻。\n这让我迫切的认识到密码的重要性。然而，现在有各种被泄露的密码库和弱密码库，这就造成了很大的问题：简单好记的密码容易被撞库破解；而复杂的密码又太难记，一不小心就忘了。\n这些问题在现在人均手机不离身的时代倒还好，毕竟靠着各大主流浏览器的密码随机生成功能，只要及时记录在备忘录里，还算能高枕无忧。而且这些浏览器一般都会自带密码管理器，可以帮你记住密码。\n但毕竟是第三方服务，总觉得没有握在自己手里舒心。先不谈企业泄密问题，浏览器自带的管理器就有以下几个缺点：\n随机生成的密码有时不符合某些网站的奇葩要求，还得自己额外设计。 大部分密码识别只靠网页的基础域名，终究是有限制。说的就是你，edge。 企业的“朝令夕改”随时可能让服务停止，Microsoft Authenticator的停止就很好的印证了这一点。 … 如此种种，我决定自己弄一个本地优先的密码库。\n本地优先的密码库——Bitwarden Bitwarden也是一个提供密码管理的服务商，在Windows、Android、ios乃至Linux都有相关的客户端，主流的Chrome和Firefox浏览器都有插件，用起来非常方便。\n既然我对密码的态度是本地优先，自然不可能用 Bitwarden 的官方服务，必须自己动手自建一个。Bitwarden 提供了简单方便的 Docker 自托管方案，这也是我选择它的重要原因。\n自托管服务端 server端有两个选择，一个是官方的bitwarden/server，一个是非官方的dani-garcia/vaultwarden。我是选择vaultwarden，毕竟github的star数是不会骗人的。\n在进行搭建之前，我们还需要准备以下东西：\n个人域名 公网ip 搭建 vaultwarden的安装非常简单，它的github页面也有相关的docker命令和compose，不过这里还是给出我自己使用的compose模板。\nservices: vaultwarden: container_name: vaultwarden image: vaultwarden/server:latest restart: always volumes: - ./data/:/data/ ports: - 80:80 environment: # - SIGNUPS_ALLOWED=false # 禁止新用户注册 - DOMAIN=yourdomain # 这是您希望与您的Vaultwarden实例关联的域名。 - LOGIN_RATELIMIT_MAX_BURST=20 # 允许在一阵登录/两步验证尝试中的最大请求次数。 - LOGIN_RATELIMIT_SECONDS=60 # 这是来自同一IP的登录请求之间的平均秒数，在Vaultwarden限制登录次数之前。 - ADMIN_RATELIMIT_MAX_BURST=20 # 这与LOGIN_RATELIMIT_MAX_BURST相同，只争对admin面板。 - ADMIN_RATELIMIT_SECONDS=60 # 这与LOGIN_RATELIMIT_SECONDS相同 - ADMIN_SESSION_LIFETIME=60 # 会话持续时间 - ADMIN_TOKEN=yourtoken # 此值是Vaultwarden管理员面板的令牌（一种密码）。为了安全起见，这应该是一个长的随机字符串。如果未设置此值，则管理员面板将被禁用。建议openssl rand -base64 48 生成ADMIN_TOKEN确保安全 - SENDS_ALLOWED=false # 此设置决定是否允许用户创建Bitwarden发送 - 一种凭证共享形式。如果只是自己用，请求改为false - EMERGENCY_ACCESS_ALLOWED=true # 此设置控制用户是否可以启用紧急访问其账户的权限。例如，这样做可以在用户去世后，配偶可以访问密码库以获取账户凭证。可能的值：true / false。 - WEB_VAULT_ENABLED=true # 此设置决定了网络保险库是否可访问。一旦您配置了您的账户和客户端，停止您的容器，然后将此值切换为false并重启Vaultwarden，可以用来防止未授权访问。可能的值：true/false。 根据上面的模板进行个人调整后，输入docker composeup up -d即可直接运行。后续访问需要使用vaultwarden实例关联的域名才能访问，也就是环境中DOMAI项所设置的个人域名。至于反向代理之类的，则需要另寻教程，也非常简单。\nSIGNUPS_ALLOWED参数默认是true，允许新用户进行注册。在开始之前都必须删除该项参数或者将参数设置为true，不然连自己也无法进行注册，右上角会弹出相应的报错。后续想一个人用，只需将true改为false即可。\n建立账户 我们需要在这里建立一个自己使用的账户，密码设置一个自己一定可以记得住/记载手机里面的强密码即可，以后基本上只需要记住这一个密码就完全搞定了。\n新增密码 视线来到右上角“新增”，点击即可出现各种密码类型，我相信各位最常用的应该就是登录这一个功能了。\n页面非常直白，一步一步照着填即可。网站可以多选，理论上你可以将各种不同网站但都是同一套账号密码存放在同一个项目里，不过都搭建密码库了，我相信大家还是不会做这种浪费时间和金钱的事。\n值得注意的是，默认的网站识别也是基于基础域名，也就是主域名，这一点跟edge等一众浏览器自带的密码管理器是一样的。点击后方的齿轮样式图标即可匹配检测更改检测机制。\n对于跟我一样多个同一个主域名下有数个子域名，且子域名服务所需的账户和密码都各不相一的情况，可以考虑将匹配检测改为主机，这样bitwarden客户端识别到符合的子域名时就能正确的显示密码，\n**——再也不用忍受edge一次弹出数个毫无相关的密码选项了。\n转移密码 不得不说，导出密码库是一个好文明，跟导出收藏夹一样，大大降低了更换密码管理器的成本。\n这里只说edge浏览器的操作，其他浏览器照葫芦画瓢的操作即可。我们只需进入到设置\u0026gt;密码和自动填充\u0026gt;Microsoft 密码管理器，点击“密码”右边的三个点，选择Export passwords，即可得到一份非常完整的csv密码文件。如果后续不在需要edge的密码管理功能，那么此时也可以顺手将“请求保存密码”关闭，并将自己的密码逐个删除。\n回到vaultwarden页面，点击工具\u0026gt;导入密码，选择刚刚导出的csv文件，并在上方的文件格式选择egde，然后点击导入数据即可。\n客户端 服务端大致操作说完，接下来就是万众瞩目的客户端了。毕竟只有好的客户端才能真正发挥密码库的实力，光有服务端的bitwarden还不如备忘录来的方便。\n我们进入到bitwarden的主页，点击Download，便可下载到各种浏览器插件和各大系统的客户端。\n以浏览器插件为例，我们需要下方的“正在访问“选择”自托管“，并填写自己设置的vaultwarden的域名。\n登录成功后，我们便可以在客户端上同步进行密码的更新、增加、删减，它会自动上传到服务端并同步到其他客户端，达成真正的一端多用。\n不过由于默认的密码库超时时长太短，导致每次都得先输入一次主密码，这低于平时习惯edge密码管理的我来说极度不方便，因此我会在自己觉得”信的过且绝对不会丢失“的设备将密码库超时的时间改为”从不“，这样基本就获得了和以前没什么两样的体验了。\n值得一提的是edge的手机版本其实也可以根据上述的类似操作关闭自带密码保存，并安装手机浏览器版本的扩展，这样的也可以获得一个非常棒的使用体验。这点也是我在手机版本越做越垃圾的今天还在坚持使用edge的原因。\n尾声 在三年前我还对浏览器的密码管理大为赞叹并大力加以使用，没想到三年后的我居然会不满于此。写到这里突然想到，这算是对美好生活的进一步追求？还是算对为满足自身欲望的有一次行动？\n语言真是神奇，换一下说法，褒义贬义居然能发生180°的大回旋，乐。\n","date":1757507528,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1758717469,"objectID":"db118361d01e467b169faf6d897f67eb","permalink":"https://cyilin36.github.io/post/bitwarden%E6%90%AD%E5%BB%BA/","publishdate":"2025-09-10T20:32:08+08:00","relpermalink":"/post/bitwarden%E6%90%AD%E5%BB%BA/","section":"post","summary":"做密码的掌握者","tags":["Docker","密码","安全"],"title":"Bitwarden搭建","type":"post"},{"authors":null,"categories":null,"content":"前言 总所周知，在电子设备中，“续航——高性能——重量”这三点几乎是不可能实现的三角。这对于我这种经常出差的人来说，感知特别明显：出门在外半个月一个月，自己的台式机只能在家里吃灰；背着个游戏本不但重而且续航拉跨。于是乎，串流便边引入我的眼界中。\n串流的软件也是百花齐放，商业程度高的软件可以有qq远程、向日葵等，免费的软件也有rustdeck等开源项目，甚至于Windows本身就自带了远程桌面这一程序。但是上述软件的侧重点都有所不同，使用成本也差别巨大。因此需要我们好好的甄选适合自己的一套工具。\n软件选择 在这里，我的方案是办公一套，游戏一套。\n办公选择——远程桌面 上述提到过，Windows其实自带了一套远程桌面RDP，远程桌面的控制端在家庭版便可以任意使用。\n而被控端则是需要起码专业版方可开启。\n因此推荐大伙升级到专业版会比较好。\n被控端开启该功能后，我们只需要在控制端的电脑上搜索远程桌面连接，输入被控端的ip地址便可以直接远程控制了。手机端则是安装Windows app，然后按照电脑端一样输入ip地址即可实现远控。\nRDP会占用3389端口，但是远程桌面软件可以通过输入ip:端口的方式来选定端口。\n游戏选择——日月组合 RDP之所以在游戏方面不被我选择的原因是：这玩意延迟属实是有一点高，只适合办公/玩galgame，甚至不适合全屏玩galgame。\n俗话说得好\n——专业的事情就交给专业的人干\nsunshine+moonlight的组合便是为了游戏而生的，用来玩游戏自然是首选。有着以下优点：\n是开源的，在github上就可以找到源代码，可以免费使用。 有着众多的改版软件，轻松满足各种不同的需求。 SunShine部署 sunshine是作为服务器、被控端安卓的软件，我使用的是基地版)。该版本有着最大的优点便是集合了虚拟显示器，串流的时候物理显示器可以自动熄屏，大大降低了玩黄油时候被舍友发现的风险，实在是保护隐私的利器。\n作者的教程其实非常全面且详细，这里就不再重复赘述，值得注意的是笔记本用户需要注意设置一下核显和独显。\nmoonlight moonlight分为移动端和电脑端，移动端又分为ios和安卓。由于我本人使用的手机是小米，因此这里只能分享安卓的，ios端在基地版的教材中有介绍，但本人并未使用过。\n安卓端我本人推荐使用Apollo的改版。这个版本最吸引我的地方便是内置了一个虚拟基盘，在应急的时候——比如输入密码，非常方便。\npc端使用的则是官网的版本，理由非常简单：没有找到其他的改版，只好用原版了。 它们使用也非常简单，跟rdp一样，输入ip即可访问。\n网络连接 前面的软件选择其实都是小问题，真正要解决的其实还是如何远程连接。\n如何在同一个局域网中那网络自然不成问题，只需要输入局域网的ip就可以。但是远程连接呢？不在一个内网的环境下呢？这成了非常蛋疼但是不得不解决的问题。\n——谁也不想串流仅仅局限于一个小小的局域网之中。\n公网串流 如果对网络有那么一点了解，那么一定知道，互联网是有公网这么一个概念，其每个连接公网的设备都有公网上一个独立且唯一的ip。如果自己设备有分配到公网ip，那么直接连接便可。\n然而实际情况是残酷的，国内的互联网用户有90%的用户都是没有公网的，即使有也只是不但长而且还会随时会变化的ipv6；普通用户非常难申请ipv4，即使申请到说不定也是动态的。\n不过好在国内在逐步推进ipv6的普及，新建的宽带基本都自带公网ipv6，哪怕是老宽带也能轻松的开启。因此我们可以借助ddns，通过域名来实时获取ipv6的地址。\n在之前的博客开头就有如何进行ddns的操作，跟着操作即可。\nDDNS设置完成后，我们在moonlight端输入设置好的域名即可成功连接。\n这次只会说通过域名来获取ip地址，因此对于ssl证书可以无视。\n内网穿透 如果没有公网，那么自然就剩下内网这一个方案。\n内网穿透的定义非常广，方法也有很多，比如单纯的中继——通过一台带有公网ip的设备将流量进行直接转发、点对点穿透——通过一台公网服务器将两台子设备进行连接，本身不参与流量转发等等。\n由于公网服务器的网络资费等问题我还是选择了点对点穿透，并选择免费的zerotier进行搭建，在之前的博客也有讲述，跟着操作即可。\n后话 串流大半的困难其实都是网络传输的问题，单纯的控制端和被控端其实非常简单。而且串流经过网络、本地视频解码等一系列延迟，可不可用还得另说。\n如果网络质量稍微差一点、延迟稍微高一点，那么对于需要高灵敏度的游戏而言就非常吃力了，因此能不能用属于仁者见仁智者见智的问题。不过对于我这种不玩fps的人刚刚好，靠这一套让我在外地酒店的晚上都可以舒服的玩到电脑存的GalGame，单论这一点就让值得让我费力去折腾了。\n","date":1756211528,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1758717469,"objectID":"800e743c6e9da71f3b3cd65731214524","permalink":"https://cyilin36.github.io/post/%E8%87%AA%E7%94%A8%E4%B8%B2%E6%B5%81%E9%85%8D%E7%BD%AE%E5%88%86%E4%BA%AB/","publishdate":"2025-08-26T20:32:08+08:00","relpermalink":"/post/%E8%87%AA%E7%94%A8%E4%B8%B2%E6%B5%81%E9%85%8D%E7%BD%AE%E5%88%86%E4%BA%AB/","section":"post","summary":"让高性能电脑不在远离出差生活","tags":["DDNS","中继转发","串流"],"title":"自用串流配置分享","type":"post"},{"authors":null,"categories":null,"content":" ","date":1755174728,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1758717469,"objectID":"be495ae372fe646ea3470390bd80d22a","permalink":"https://cyilin36.github.io/post/%E6%9C%80%E7%BB%88%E5%B9%BB%E6%83%B3%E9%87%8D%E7%94%9F%E6%88%AA%E5%9B%BE/","publishdate":"2025-08-14T20:32:08+08:00","relpermalink":"/post/%E6%9C%80%E7%BB%88%E5%B9%BB%E6%83%B3%E9%87%8D%E7%94%9F%E6%88%AA%E5%9B%BE/","section":"post","summary":"个人觉得挺不错的截图","tags":["游戏","记录生活"],"title":"最终幻想：重生截图","type":"post"},{"authors":null,"categories":null,"content":"前言 总所周知，美化的尽头是默认，这句话放在输入法中也不例外。为了追求简洁、方便，我在几年前便是放弃学生时代使用过的各种输入法，转而投入微软拼音输入法的怀抱——有什么是比系统自带的输入法还要简洁、开箱即用的呢？\n微软输入法陪伴了我相当长的时光，我对它几乎没什么不满意，它完美符合我对一个输入法的所有追求：随着输入自动建立词库、没有乱七八糟的功能、简介的ui设计。而且Windows11的输入法皮肤也让我非常满意。\n​\nBut！ 欢乐的时光总是有限的，故事，要在那个让我至今都后悔不已的夜晚讲起。\n惨遭毒手 那天晚上我打完游玩，正准备关机睡觉。但是此时我发现系统居然自动给我下载了最新的系统更新。要知道当时的Windows11只出了短短几年，还有不少bug需要修，于是我都不带犹豫，果断进行了更新重启，把系统更新到最新的Windows11 24H2。\n在我更新完系统后，测试完各种东西后觉得毫无大事，于是安心睡觉。在接下来的数天我也没有察觉什么异常。直到那一天，我准备写一份报告时，觉得我怎么老是按错输入法，弄得我写文档的时候很烦躁。\n在后来再一次的频繁输入错误后，我才发觉，系统的输入法居然会自动切换！我切换了一下窗口，系统就会自动把输入法切换到英文模式！\n虽然我知道Windows更新是什么尿性，但是我没想到好好的输入法都能被更新坏了。\n寻找解决办法 没办法，输入法还是要用的。我于是在网上寻找各种办法，有的说重新设置\u0026#34;每个应用窗口使用不同的输入法\u0026#34;即可，也有的人说在桌面切换的页面新建一个桌面，随后切换成中文输入模式便可。但是这些办法要不就不管用；要不就是关机就失灵，下次开机得再来一次。\n最后是b站上找到相关的解决办法：将输入法的兼容性选项打开，回到老版本的Windows10输入法。\n​\n这种办法虽然确实是可以解决这个bug，但是老版本的皮肤让我看着心里就膈应，个人认为完全比不上新版的ui。\n​\n而且老版本输入法甚至一度出现了候选词无法出现，只能盲打的bug，让我以为是浏览器或者自己的程序问题，用得太糟心了。不过当时我对微软的信心尚存，而且看到了不少就此bug提交的反馈，乐观的认为bug应该果断时间就可以解决。\n“我真是个笨蛋啊！” 我是真的没想到，一个破输入法bug居然需要过了一年时间才有已经更新解决的消息，真是想要大骂阿三程序员。不过等来了更新也是苦尽甘来……吗？\n在我兴冲冲的下载完后测试，得出了一个令人绝望的事实：bug似乎并没有得到完全的修复，至少在我这里测试的结果跟之前完全一样的。此时我是真的想要扭一个新房45°，说一句名台词：\u0026#34;我真是个笨蛋啊！ \u0026#34;\n不甘心的我再度搜寻方法，还尝试在github上找相关的修复补丁，也确实是找到且试用了。mbbill/no_english_mode: 防止微软拼音输入法启动切换到英文模式\n然而造成的结果便是——我的输入法不会自动切换成英文了，而是自动切换成中文了。\n——这下我悬着的心终于是死了。\n当你无法解决问题，可以尝试解决出问题的人 道路千万条，我终于是起了使用别家输入法的心，不想再读浪费精力在这种破事情上了。便开始在网上查找合适的输入法。\n一探搜狗 我第一个想起的便是学生时代用的输入法：搜狗输入法——这玩意在公司的不少电脑上都列装了。旧时光或许是给它蒙上了一层美好的滤镜，以至于我直接重进官网下载，而没有去搜索它现在的风评。\n​\n下载、双击打开、同意协议….安装过程一气呵成，全程不到三分钟时间，速度飞快。\n在我兴冲冲的度过了一段码字时光后，我的心情发生了180°大转弯，宛如看到年少时出国留学的白月光回国后满身都是纹身而且吃喝嫖赌样样齐全一样\n——已经变成陌生的样子了。\n我是真的不明白，为什么一个输入法里面要接入所谓的AI大模型，这有啥质一样的提升吗？能帮助用户提升码字、肝代码的效率吗？为什么要塞一堆诸如截图助手、PDF查看器之类跟输入法完全搭不上边的东西？而且我使用的时候还提示需要开会员？最不能忍受的是把/?键改成、键且没有选项可以更改回去，只能掐着鼻子继续用。\n在我使用了两天后终于是爆发了，果断卸载搜狗输入法。跟微软那种屎中带金的味道不同，这玩意是猫屎裹着狗屎\n——全部都是屎！\n​\n二探RIME 在b站搜索输入法推荐的时候，无意中看到这样一款输入法：它开源免费，简洁无广告，而且还有着相当强大的自定义功能，是一个纯粹的输入法软件，它就是**RIME | 中州韻輸入法引擎**​。‘\n​\n有了上次的经验，这次我提前搜索如何配置，并且下载了其他人分享的预设。这下算是万无一失了。\n下载、安装、文件解压覆盖….在跟着忙活了近10分钟后才装上了输入法。一使用，果然是非同凡响，但是在几分钟后就发现了一个新的问题：这玩意貌似不会自动给我建立一个个人的词库啊，我重复打了这么多次的词语都没有给我在候选词中排到前列，而一个优秀的个人词库有提升效率是不言而喻的。\n最终，RIME输入法也不太合适我。它的高度可自定义和丰富的预设很强大也很适合这条的人，但是对于已经身心俱疲的我还是太过于复杂了。\n最终的选择 本着“群众的眼光是雪亮的”“要相信人民的智慧”的精神，我还是决定求助于和我使用环境类似的人。于是我便在最近常刷的Linux do论坛发布了求助帖子，微信输入法便是在这是映入了我的眼帘。\n微信输入法传言是微信读书团队做的输入法，名字上虽然带着“微信”二字，但却不像是微信一眼臃肿，反而透露着一股清爽、简洁的味道。\n​\n​\n它虽然没有微软输入法和rime输入法一样纯粹和简洁，但是也差不了多少，跟搜狗之流那是云泥之别。经过简单设置后，它在使用上可以非常接近原生的微软输入法。只需要按照图片上进行设置一下便可以了。\n​\n​\n并且它还解决和改进了一些微软输入法的痛点，比如：在输入\u0026gt;默认输入语言中可以设置始终使用英文标点符号。这对于特定场景非常有用，例如~~写点代码的时候便不用担心标点符号输入错误导致排查半天的问题。~~\n​\n如果多设备统一安装了微信输入法，那就可以通过跨设备将设备的输入法串联起来，将个人词库、复制粘贴进行同步，非常方便，省下了我打开LocalSend的功夫。\n​\n并且这种同步是不需要账户，只需要手机输入一下配对码即可。如果还是担心隐私泄露，它也贴心的给了单机模式。\n这么一看，对比搜狗输入法显得无比简洁，没有把各种工具一股脑的塞进用户电脑，而且贴心的给出了开关；对比rime则是显得设置方便，不需要对着yaml文件自己一点一点的编写配置，非常开箱即食，自然是一下子就俘获了我的心。\n只是它不能像是微软输入法一样把上下方向键作为候选词选择键让我有点不习惯以外，其他的简直就是完美。我直接将手头的所有设备都换成微信输入法了，美滋滋。\n结尾 一个输入法让我烦恼了一整年，如今更是意识到直接更新到最新系统等于帮微软做无偿小白鼠。或许我应该学Linus一样，说出一句：\n“Fuck you,Microsoft！”\n","date":1754742728,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1758717469,"objectID":"2bb529e5e021b593d92ccebc2bbe512b","permalink":"https://cyilin36.github.io/post/%E6%9B%B4%E6%8D%A2%E8%BE%93%E5%85%A5%E6%B3%95%E7%9A%84%E4%BA%8C%E4%B8%89%E4%BA%8B/","publishdate":"2025-08-09T20:32:08+08:00","relpermalink":"/post/%E6%9B%B4%E6%8D%A2%E8%BE%93%E5%85%A5%E6%B3%95%E7%9A%84%E4%BA%8C%E4%B8%89%E4%BA%8B/","section":"post","summary":"阿三写的代码简直就是狗屎","tags":["记录生活","输入法"],"title":"更换输入法的二三事","type":"post"},{"authors":null,"categories":null,"content":"前言 前几天要搬家，于是我想着要不给已经开机一年多的机器清个灰啥的，反正搬家也得拆散热下来。\n搬家的过程是一切顺利，动手清灰也是自然ok。但不知为何，机器开机以后cpu的散热风扇在哗啦哗啦的响——该不会给我整除什么幺蛾子了吧。看过我之前的文章的朋友应该知道，我有一台当作服务器的备用机，上面还虚拟了nas和旁路由，而出现问题的就是这台机器。\n经过测试，只是有异响，其他的没什么事情，我便是安稳睡觉了。但是半夜躺在床上，听着电脑哗啦哗啦的声响，心想着:“换个风扇也没几个钱，为了晚上睡觉的安稳干脆换了吧。“如果当时我能把这个念头打消就不会有后面的那么多事情了。\n系统盘损坏 不知道是我换的姿势不对还是我拧螺丝的时候磕到了，在我安装完新的风扇后，显示器居然是黑屏的！第二次尝试开机，屏幕也还是只有黑屏——坏了，不会把我电脑搞崩溃了吧！\n于是我火速开始问题排查，看看是不是没装好散热、看看是不是内存崩了、检查硬盘金手指有没有缺损等等。最后在bios中找到了答案：主板无法检测到系统盘。\n我进入bios后，在高级模式\u0026gt;启动\u0026gt;开启CSM中将Disable改成Enable，然后发现压根就没看到我的系统盘，这才不得不承认我这块硬盘大抵是真的死了。\n梅开二度 不过好在我还有一块之前为了折腾缓存加速而购买的ssd，而且存放这hyper-v的vhdx虚拟硬盘的机械盘没事，还有得补救。于是我去下载系统镜像和常用软件，准备重装系统，顺利的话一两个小时就可以完全恢复。\n老天爷仿佛就在跟我过不去——就在我安装玩系统并顺利启动所有虚拟机，准备配置软件的时候，意外死机了！\n天真的我还以为是意外，刚刚安装的系统没更新不稳定，结果重启后没三分钟蓝屏！不信邪的我再度试了几次，结果连蓝屏都没有，显示器直接黑屏。\n淦哦，我心态差点崩了。我耐着心子再次进pe重装系统，结果进去分区的时候就发现各种幺蛾子：有时无法检测到硬盘、检测到硬盘后能否顺利分区得看运气、幸运的分区好后安装会报\u0026#34;应用映像设备不存在\u0026#34;的错。这下我是真的崩溃了。\n在我折腾了一晚上后不得不再度承认一个事情:\n——玛德，第二块硬盘也寄了。\n三阳开泰 在我订购了新的硬盘后也是再次尝试安装，结果插上去后还是发现没检测到硬盘，好在换一个插槽就ok了，惊出我一身冷汗。\n进pe——安装系统——上电——开机——安装hyper-v和各类软件……这次只能说无比顺利，再也没碰到突然死机的问题了……嘛？\n就在恢复到一半的时候，我出去吃个饭，回来后发现显示器又黑屏了，风扇也不转了。靠，电脑成精了成天跟我过不去是吧！\n再度启动电脑，过了一会就会听到主板发出\u0026#34;塔\u0026#34;的一生，然后风扇停止，显示器熄屏。\n——不会又是经典复刻吧，还是说我主板或者电源不行了？！\n我冷汗都下来了，连忙翻出Windows的系统日志细细判断，发现确实是有报警，提示是自动断电，这下我是真的崩溃了。\n不过好在我还留了点心眼，把日志扔给ai看了一下，在数次提问后才发觉——有可能是Windows系统自带的睡眠功能的问题啊！\n抱着死马当活马医的心态，我去把所有睡眠都关闭，然后拿手机对着显示器拍摄了两个小时，生怕再次出现问题。\n最后的结果还是好的，关闭了睡眠后问题就解决了。\n结尾 回想这几天真实难绷，换一把风扇后续导致我浪费了近三天时间来收拾收尾，大抵我这几天真的是碰到了pc玄学了。\n真是手贱害人啊！！！\n","date":1753792328,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1758715308,"objectID":"7cfb7e28aa39e4837f30af5fca31e071","permalink":"https://cyilin36.github.io/post/%E4%B8%80%E6%8A%8A%E9%A3%8E%E6%89%87%E8%AE%A9%E6%88%91%E6%B5%AA%E8%B4%B9%E4%B8%89%E5%A4%A9%E6%97%B6%E9%97%B4/","publishdate":"2025-07-29T20:32:08+08:00","relpermalink":"/post/%E4%B8%80%E6%8A%8A%E9%A3%8E%E6%89%87%E8%AE%A9%E6%88%91%E6%B5%AA%E8%B4%B9%E4%B8%89%E5%A4%A9%E6%97%B6%E9%97%B4/","section":"post","summary":"手贱害人","tags":["记录生活","心情随笔"],"title":"一把风扇让我浪费三天时间","type":"post"},{"authors":null,"categories":null,"content":"前言 看过我之前的文章的朋友就知道，我个人是使用ani-rss一集一集的下载番剧，并通过emby进行番剧的元数据自动刮削、整理并且进行播放。\n但是现在字幕组更新速度（比如ani字幕组）其实不算慢，90%会有资源已经下载完成且emby媒体库已经识别并要刮削了，但是相关的元数据网站（比如TMDB）还没来得及更新元数据的情况，经常会晚上几天。\n这时候就非常难受了——会出现看着有一些剧集有元数据而有一些没有元数据，显得非常不好看、突兀，得时不时的进到相关番剧的具体某一集点击刷新元数据，才能保证在第一时间获得最新的元数据。\n而我的解决办法便是通过emby自带的自带刷新元数据功能和相关插件来达到最好的效果。\n自动刷新元数据 媒体库自动刷新元数据 其实emby本身就自带了一个元数据刷新功能，在设置\u0026gt;媒体库\u0026gt;编辑中即可找到。\n​\n可以在自动从互联网刷新元数据中设置自动刷新元数据的日期。但是也就只有这几个间隔时间选择，没有更短的时间。这对于一集一集追番我的来说时间隔得太久了，每个月才更新一次，剧集都出好几集了！\n因此还需要另外一个插件来进行补充——Episode Refresh。\nEpisode Refresh——元数据刷新插件 Episode Refresh是一个剧集元数据刷新的网站，它以最近剧集的播出日期为界限，根据剧集所在的媒体库元数据选择进行自动刷新元数据。由于是根据播出日期来决定是是否需要刷新元数据和，因此它作用于刷新电视剧类型的媒体库，电影之类的媒体库是无法生效的。\n我们可以在设置\u0026gt;插件\u0026gt;Catalog\u0026gt;元数据中找到。\n​\n此后我们再回到设置\u0026gt;插件\u0026gt;我的插件中即可看到已安装的Episode Refresh，点击它即可进入到具体的设置中。\n​\nLookback days是指距离首次播出日期多少天之内的剧集，一般默认设置的7天也就满足了。\nInclude episdes with no premier date是指是否要刷新不带首播日期的剧集，这个看个人选择是否需要勾选。\n下面表格数据则是插件后续需要刷新的剧集。\n回到设置\u0026gt;计划任务中，我们可以发现多了一个叫做Refresh Recently Aired Episodes的任务，这个便是Episode Refresh的自动运行设置了。\n​\n点开可以设置什么时候进行一次插件的执行——即元数据的刷新。个人推荐一天一次，时间可以定在凌晨半夜。\n​\n如果第一次等不及的，可以返回计划任务，点击带类似播放器播放符号即可立即执行一次插件的元数据刷新。\n结尾 其实这也是我询问AI才知道有这么一个插件，直接谷歌搜都不知道有这玩意，虽然我用的AI正是谷歌家的Gemini就是了。\n","date":1753273928,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1758717469,"objectID":"c92b0747fddb1ea67babcf88c183752c","permalink":"https://cyilin36.github.io/post/emby%E7%9A%84%E5%85%83%E6%95%B0%E6%8D%AE%E6%8F%92%E4%BB%B6episode-refresh/","publishdate":"2025-07-23T20:32:08+08:00","relpermalink":"/post/emby%E7%9A%84%E5%85%83%E6%95%B0%E6%8D%AE%E6%8F%92%E4%BB%B6episode-refresh/","section":"post","summary":"不再需要时刻盯着元数据网站","tags":["emby","插件"],"title":"Emby的元数据插件——Episode Refresh","type":"post"},{"authors":null,"categories":null,"content":"前言 最近时间充裕，没事就补番或者二刷老番，这自然是要用我花了大心思弄得emby。\n这不用不知道，一用吓一跳阿。在部分番剧中，较为生僻的简体中文会出现 “口口口” 的现象。比如这样：\n​\n虽然出现的机率很小，也几乎不怎么影响观感，但就像猫儿挠木板一样在刺挠着我的神经，让我久久不得入睡。为了晚上的睡眠质量， 我决定速速解决这个问题。\n解决方案 折腾过上古卷轴mod和翻译的我很明确知道这是字体缺失造成的，于是经过我谷歌和ai的一顿搜索，我轻松就获得了解决方案——字体子集化！\n字体子集化：简单来说，它会从完整的字体文件中只提取出你的项目实际用到的字符，然后生成一个新的、更小的字体文件。\n也就是说只要对所有出现了口口口的字幕进行一次子集化就没什么事情了。\n然而，我的字幕数量繁多，且不知道那些字幕是需要子集化的。如果所有字幕都进行一次，那得通宵了。而且子集化所需的前置工具准备也略微繁琐，详情请看初之音的字体解决方案博客。\n这时我灵光一闪——有没有能在视频播放时候实时进行子集化的emby插件呢！？\n有的兄弟，包有的！\n在我第二次搜索中，发现了一个满足我需求的工具——fontInAss。 （github真是宝库啊，这是第几次在上面发现可解燃眉之急的项目了）\nfontInAss fontInAss是实时将字体子集化后嵌入ass的小工具，用于在未安装对应字体的系统上正确显示字幕。\n​\n其提供了手动安装和docker快速部署两种方案。虽然不是可以直接内嵌在emby中的插件，但是我恰好有nas，这点差别也不用多在意。\n我是个懒狗，docker部署自然就成了最佳选择。其部署方式也非常简单，作者也给出了部署的命令：\ndocker run -d --name=fontinass --restart=unless-stopped \\ -p 8012:8012 \\ -e EMBY_SERVER_URL=http://[ip]:[port] \\ -v /etc/fontinassData:/data \\ -v /path/to/your/fonts:/fonts \\ riderlty/fontinass:latest 当然也可以使用我自己写得compose模板：\nservices: fontinass: image: riderlty/fontinass:latest container_name: fontinass restart: always ports: - \u0026#34;8012:8012\u0026#34; # 后续访问emby/jellyfin的实际地址 environment: - EMBY_SERVER_URL=http://[ip]:[port] # emby/jellyfin服务器地址 volumes: - /fontInAss/data:/data - /fontInAss/fonts:/fonts # 完整字体文件位置，子集化所需的原始字体都会从这个地方抽取 ​EMBY_SERVER_URL：自己的emby/jellyfin服务器地址，最好用http链接。\n我们把一些搜罗到的原始、完整字体仍在映射/fonts的路径即可。我个人是推荐vcb的超级字体整合包。\n这样就大功告成，后续访问映射了该docker的8012的端口就ok了，fontInAss会自动实时处理子集化，口口口问题也成功被解决。\n​\n结尾 虽然问题不大，但是迅速解决还是很有成就感的。这次也是在github上找到具体的解决办法，而且听闻前段时间github有了10亿个仓库，再次不得不感慨github的哆啦a梦属性。\n不多说，继续看番，摇曳露营真好看啊。\n","date":1752409928,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1758717469,"objectID":"ca53c5d2479eb847cfac1d74dd2680c6","permalink":"https://cyilin36.github.io/post/emby%E5%AD%97%E4%BD%93%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/","publishdate":"2025-07-13T20:32:08+08:00","relpermalink":"/post/emby%E5%AD%97%E4%BD%93%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/","section":"post","summary":"消灭口口口字幕","tags":["Docker","emby","字体"],"title":"Emby字体解决办法","type":"post"},{"authors":null,"categories":null,"content":"初识 初次接触到这部作品的时候，还是在贴吧看到。当时看到帖子在吹《航迹云的彼方》——瑛莉线，我就惦记上了。直到一年后我才真正的开始开始游玩。期待经过了一年时间的发酵，早就让我非常期待这款游戏了。\n这是一款2014年的游戏，而且画风上并没有什么亮点，第一眼进去是显得平平无奇，至少我是没看到哪个角色是吸引我的眼球的。\n就像是一个标准的废萌，男主（广崎康司）一开头就被其中一位女主——万人迷的学生会长佐藤里沙所表白，结果是果不其然的拒绝了，原因是康司从小就喜欢上了自己的继妹——广崎美奈。因为喜欢的人成为了自己的妹妹，自己也就只能隐藏起这段感情，当一个承职的哥哥 （好强烈的既视感啊，是你吗？段誉） 。\n然后，就被今天所讲述的女主——美汐瑛莉所盯上了。\n瑛莉是一个天才，做事事倍功半，在班上，甚至是整个学校都是人气王，毫无疑问是一个活在学校金字塔顶的人。但是她有着一个苦恼，那就是她无法感觉恋爱了。她自认为自己非常聪明，但是却对爱这种人生终极命题一点感受都没有，因此在学校内偷装了大量的监控设备偷窥学校里面的情侣，并擅自的给出偷拍照，并自述为是对情侣们的试炼。\n而里沙对康司的表白场景也不出以外的被瑛莉所知道了。她好奇为何康司对万人迷的里沙都能够说去拒绝之词，因此用恶劣的手段——利用康司对妹妹美奈的感情让康司做自己的恋爱观察对象。\n老实说我玩到这一段的时候，虽然被瑛莉的忽然转变所震惊了一下，但是对于做出偷窥这种事情的理由真的非常无语，有这么好的脑子在这里浪费青春去观察什么恋爱，去研究可控核聚变发电和验证弦理论不好吗？不过为了世界观和游玩体验，我还是把这些压在心底，继续玩下去，虽然后面我数次忍不住又吐槽就是了。\n个人线 个人线基本上就是老套路了：康司被迫加入了看似天文观测部实则恋爱观察部的社团，同部长瑛莉和社员户井润（瑛莉的青梅竹马） 、羽川原伊吕波一起，四人共同展开了社团活动，康司和瑛莉更是签下契约：当瑛莉真的喜欢上康司后，说出“我喜欢你”后，康司就得把瑛莉甩了。\n故事的结尾我用屁股想都知道：瑛莉渐渐感受到了喜欢的情感，喜欢上康司了；康司也终于选择和瑛莉站在一起共度余生。\n后续的发展果然不出我所料。故事中康司逐渐走近瑛莉的内心，发现她其实是一个单纯的少女，单纯到甚至是写出喜欢两个字都会无比害羞。而瑛莉也渐渐被康司吸引，变得真正喜欢上他。\n虽然个人线的主题是让瑛莉感受到恋爱，但是整体上还是偏向日常娱乐风格。穿插了诸如野营、天文观测等情节（还不止一次）。中途还数次谈论起瑛莉的无法感受恋爱，也就让我如前文说提到了那样再次吐槽：\n——日本学生是不是都闲到蛋疼啊，有这头脑去解决人类发展问题啊！\n在中后期主角团碰到了瑛莉和润的初中同学，我们也得了瑛莉对恋爱无法动心的由来：因为初中同学喜欢润， 因此极度身为青梅竹马的瑛莉，对她实行了校园霸凌，甚至造成了严重的身体创伤，变得生育困难。虽然瑛莉最后是报复了回来，但是阴影还是留了下来。\n同时，前面提到的摄像头偷窥事件再一次的被端上了桌面，三番四次的反复提起。\n在故事的末尾，瑛莉已经感受到了恋爱的美好，正欢天喜地的准备继续过着校园的青春生活。但，初中的黑历史开始被曝光，让瑛莉的良好风评显得岌岌可危；反复提及的摄像头偷窥事件这把枪也终于打响，社团被面临废除的风险。\n​\n​\n当然，这种废萌作品肯定是大团员结局的——善良的同学理解瑛莉的过去，不介意她的过往；被废弃的社团在男主和朋友的努力下另起炉灶、成功复活；康司也是废弃了他们之间的契约，没能让瑛莉说出那句“我喜欢你。 ”，选择一起走下去。\n​\n虽然上面洋洋洒洒的写了一大段，并且故事中发生了不少事情，但是故事本身的质量没有能打动我：对故事并没有下很深的功夫去进行描写刻画；对角色而言也没有很好的成长弧光；对结尾的感动情节也没有多少渲染，因此我对这个故事的评价并不高。\n它在我这里只能获得一个食之无味弃之可惜的评价，属于是无聊打发事件可以，但是专门抽空去完不值得。感觉一年的期待浪费了。\n后日谈 就在我准备听完片尾曲就关闭游戏时，游戏开启了瑛莉线的后日谈。\n后日谈所展现的是康司和瑛莉在整个人生的数个片段。他们在高中哭着和朋友告别毕业；在大学共同住在一起，共同搭建起一个温暖的小窝；时常和高中友人们聚在一起谈天说地；大学毕业后幸苦工作，并买下了真正属于自己的家，一起搭建真正独属于他们自己的小屋；突然发现瑛莉怀孕，于是奉子成婚；两人一起将自己爱情的结晶养大成人；看着自己的女儿也成家立业，也找到了自己的幸福；与一起变老的朋友聚在一起畅聊人生……一直到生命的尽头，两人都是在彼此身边。\n​\n在温暖的阳光中，两人并肩而坐，瑛莉终于在说出了那句藏了五十年的话：“我喜欢你。 ”这一份喜爱埋在了她心中有了五十年，在人生的最后时刻她选择说出，带着五十年份量的喜欢一并说出来了。\n​\n这一刻打动了我，让我眼角微湿。ed缓和的曲子后接上温馨的后日谈，后日谈一幕一幕将他们之间的人生和爱情故事展示出来，他们之间的幸福故事在一点一滴的展现在我的眼前，逐渐令我动容。\n在最后的一幕，他们的外孙辈来到住所整理遗物。整理中外孙们发现了他们曾经的社团——天文观测部的旧物：望远镜。而望远镜中夹杂着一一份字条。\n​\n她早已写下了最喜欢的情书，她带着五十年份的喜欢对着他告白。\n这一刻，眼泪从我眼眶止不住的流出。这个后日谈，当真是我玩过的最厉害的一个，我能给满分。这下子我才知道为什么这么多人推荐瑛莉线了，顿时觉得之前没放弃这部作品，真的太好了。\n​\n最后放上瑛莉线的攻略\rリンゴ飴?（苹果糖？）\n呼び捨てでいいよ（直接叫名字就可以了）\n美汐に届けよう（送还给美汐）\nなんで武装してるんだ？（为什么要武装啊？）\nそれはそれとしてトイレにでも行くか（也就是说厕所也会跟着一起去吗）\n瑛莉の席がいい（选瑛莉的座位）\n何かして遊ぶか（玩点什么吧）\nいくよ（去）\n荷物くらい運んでやるか（帮忙搬运下行李吧）\nしたい（想做）\n見たい（想看）\n大きいぞ（最喜欢了）\nそのまま口に(外に出す)（內射（外射））\n分かりますよ（知道了）\n答えるよ（回答）\nＡ キ（A选项）\n佐藤さん（佐藤）\n瑛莉と（和瑛莉一起）\nイヤだ（不要）\n瑛莉 END\n","date":1747139528,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1758717469,"objectID":"428516ba440c9b63e2a1864968e4fe74","permalink":"https://cyilin36.github.io/post/%E8%88%AA%E8%BF%B9%E4%BA%91%E7%9A%84%E5%BD%BC%E6%96%B9%E7%91%9B%E8%8E%89%E7%BA%BF%E5%90%AB%E5%89%A7%E9%80%8F/","publishdate":"2025-05-13T20:32:08+08:00","relpermalink":"/post/%E8%88%AA%E8%BF%B9%E4%BA%91%E7%9A%84%E5%BD%BC%E6%96%B9%E7%91%9B%E8%8E%89%E7%BA%BF%E5%90%AB%E5%89%A7%E9%80%8F/","section":"post","summary":"用一生来定义爱","tags":["游戏","galgame","心情随笔"],"title":"航迹云的彼方：瑛莉线（含剧透）","type":"post"},{"authors":null,"categories":null,"content":"前言 人类对于r18的分享有着莫名其妙的热爱，总是有那么一群赛博圣人、网络佛陀在孜孜不倦的分享中他们的庞大库存。\n在我也决心成圣，到最后一步——分享资源的时候，碰到了一个无比尴尬的问题：诺大的互联网，居然没有流传甚广的快捷文件分享软件！\n或许会有人反驳我说qq、localsend、百度网盘等都是非常不错的分享途径，但：商业网盘内容审查严苛，成圣的素材上传即刻被删除；BT磁力链接看运气，分享一点私人珍藏的绝版资源可能出现对方死活链接不到你的BT设备；qq聊天软件上传限制非常夸张，好友之间的文件传输被限制在一天一G；localsend只是点对点的传输软件，并不适合外网传输。于是乎，自建网盘的想法应运而生。\nAlist 一开始我想到的是Alist。\n​\n它是是一个支持多种存储的文件列表程序，通过访问特定的私人链接即可在网页浏览器上对文件进行下载上传，还支持多种系统已经以及商业盘。因此我迫不及待的下载并尝试，不得不说，非常好用。不但能对本机存储文件进行下载，还能同时管理其他商业网盘，对于只是固定给几个人分享文件的场景，着实是完美的选择。\n于是乎我兴奋的下载、安装、设置，软件运行看起来也一切正常，从其他设备的web端也可以正常下载资源。芜湖，我要成圣啦！\n——然后就有个雷劫给我劈了个半死：\nAlist对文件的共享更多是依靠用户权限来划分，更多是类似于一个WebDAV网盘：用户登陆后只能看到管理员提前设置好的区域。对于临时分享文件/给不熟悉的陌生人分享文件，这一下就显得非常麻烦：必须手动设置，对用户新添加区域，还需要设置各种管理权限。\n——而且还是两道雷劫：\nAlist有一个不大不小的bug（不知道是个人问题还是软件错误）：对于多文件的打包下载功能支持一般，文件越多，下载好的压缩包就越是容易解压出错，重新下载还费时费力。截止至我弃用Alist（2025年年初），这个bug在我手头上的所有设备都出现了。\nNAS 既然成圣不成，那么就该换条道路——成佛了！\n于是乎我转动目光，打起了NAS系统本身自带的外链分享功能的主意。\n或许大伙都知道，热门成熟的NAS系统大概率会有文件外链分享功能，通过系统自带的文件外链分享就可以方便快捷的给别人分享文件了。\n参考之前的文章，因为性价比原因，我使用的自建nas，用的是FNOS系统。\n​\n它也有文件外链分享，免费带宽1MB/S，对于临时的小文件分享也能够应付。\n虽然无法成为大佛，但是小佛总是可以的吧。出乎我的意料，菩提树下的心魔劫难也摆了我一道\n——FNOS对smb挂载的文件是无法进行外链分享的。\n这意味着我存于其他电脑上的资源是无法分享出去的。\n私人网盘 既然成圣不行，成佛也不行，那么就自己踏出一条真正的至尊之路吧！\n——自建网盘！启动！\nCloudrever 对于这款软件，我其实是没想起来的，直到某次下载黄油的时候发现贴主用的就是这个网盘（。\nCloudrever是一个适合家庭使用的小型化云盘系统，它允许用户根据访问网盘的的网址前缀生成文件分享链接，分享者只需要发布出去即可，不需要在建立各种层级的用户，方便快捷。而且它对主流系统都有对应版本，还有大量的教程，属实是我这样的小白用户之首选。\n然而，cloudrever使用的是虚拟文件地址，是基于 DBMS 构建了一层文件系统抽象，将用户文件和物理文件结构隔离，形成了虚拟文件系统，因此个人存入的文件实际上在是散乱的放在硬盘各处。而且由于基于虚拟地址的特性，cloudrever并不直接管理物理文件，仅仅管理文件映射的数据库，因此在物理磁盘中直接删除文件的时候，cloudrever是无法及时同步文件的。\n这对于我这种想要把文件分门别类弄得整齐一点的人就非常蛋疼了，而且我还是在通过smb挂载着这些物理硬盘，对我来说杂乱的文件摆放是一个非常头大的事情。\n总体来说，属于部署小白/轻度用户的首选。对于只想要web端操作云盘，不想要动云盘的实际物理硬盘的人，cloudrever是一个非常好的选择。只是我个人原因pass了这个优秀的软件。\nNextCloud 在放弃cloudrever后，我也差不多放弃成圣的想法了，但是q群的圣人前辈为我指了一条明路——nextcloud。\nNextCloud也是一个云盘系统，不但开源，而且还有丰富的插件为NextCloud组建了丰富的生态，而且可以挂载smb文件，同时还支持外部链接分享。\nnextcloud的上手还是有门槛的——它的server版本并没有cloudrever那样方便快捷的安装包，而且由于是国外的系统，下载安装时候的会因为网络问题费事不少。\n但是好在nextcloud还是有**docker版本**，使用docker版本即可轻松安装使用。\n安装 ​docker-compose.yml​\nservices: # 定义服务 nextcloud: # 服务名称 image: nextcloud:stable # 使用的镜像名称，这里使用官方的 Nextcloud 镜像 container_name: nextcloud # 指定容器名称 ports: # 映射端口 - \u0026#34;80:80\u0026#34; # 将主机的 80 端口映射到容器的 80 端口 volumes: # 挂载卷 - /docker/nextcloud:/var/www/html # 将主机的 /docker/nextcloud 目录挂载到容器的 /var/www/html 目录 restart: unless-stopped # 设置容器的重启策略，这里表示除非容器被停止，否则一直重启 安装完毕后，我们需要通过浏览器，输入ip:端口进入到nextcloud管理页面，进行管理员注册和初始化。\n初始化完成后，我们需要通过插件才能加载smb协议。\n进入nextcloud，并点击右上角头像，点击应用。 点击你的应用，找到External storage support并启用。 此时在个人设置\u0026gt;外部存储中，既可以添加基于网络协议的硬盘 但是，在原版中是没有smb协议的支持的，我们需要在另外设置一番。 打开你的ssh，连接并进入nextcloud，逐步输入以下命令。 apt update # 更新软件库 apt install smbclient libsmbclient-dev pecl install smbclient docker-php-ext-enable smbclient 执行完后，退出并重启nextcloud便可看到新增了smb的支持。 最后填写相应的信息即可挂载。 文件分享 nextcloud的文件分享功能，是只允许https链接外链分享，因此我们还需要使用反向代理将域名连接到nextcloud中。这一步在以前的博客：剑走偏锋的nas方案——2中就有讲述，直接照抄即可。\n反向代理完成后，我们通过https连接进行访问却发现被nextcloud被阻拦，那是因为我们还需要把这个域名添加进信任域名中。\n进入nextcloud，安装编辑器。\napt update # 更新软件库 apt install nano # 安装编辑器，我用顺手了nano 编辑config.php并添加信任域名。\n打开config.php。\nnano /var/www/html/config/config.php # 编辑配置文件 修改’trusted_domains’，将域名设置为信任域名。\n\u0026#39;trusted_domains\u0026#39; =\u0026gt; array ( 0 =\u0026gt; \u0026#39;test.cyilin.top:80\u0026#39;, 1 =\u0026gt; \u0026#39;192.168.110.6:80\u0026#39;, ), 修改 ‘overwrite.cli.url’ \u0026#39;overwritehost\u0026#39; \u0026#39;overwriteprotocol\u0026#39;。\n\u0026#39;overwrite.cli.url\u0026#39; =\u0026gt; \u0026#39;https://nextcloud.cyilin.top:10086\u0026#39;, #指定Nextcloud的访问地址 \u0026#39;overwritehost\u0026#39; =\u0026gt; \u0026#39;nextcloud.cyilin.top:10086\u0026#39;, #Nextcloud的主机地址，指定主机名字 \u0026#39;overwriteprotocol\u0026#39; =\u0026gt; \u0026#39;https\u0026#39;, #使用https解析 可选步骤，客户端连接nextcloud的时候需要设置，不然就会被重定向为http 重启nextcloud。\n最后在nextcloud的web页面，点击分享符号即可复制分享外链。\n总结而言，nextcloud虽然比cloudrever要复杂不少，但是它的操作上限也更高，属于是我心中的完美私人网盘了。\n——我的至尊路，成了！\n结语 看r18只是让自己开心，成功分享r18那一份喜悦同样不亚于此。下毛片，看毛片，分享毛片，大抵人生最新幸福的事情也不过如此了。\n","date":1746793928,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1758717469,"objectID":"5b14209f2fcdecdce72e826d942cf32a","permalink":"https://cyilin36.github.io/post/%E6%96%87%E4%BB%B6%E5%88%86%E4%BA%AB%E7%9A%84%E6%8A%98%E8%85%BE%E4%B9%8B%E6%97%85/","publishdate":"2025-05-09T20:32:08+08:00","relpermalink":"/post/%E6%96%87%E4%BB%B6%E5%88%86%E4%BA%AB%E7%9A%84%E6%8A%98%E8%85%BE%E4%B9%8B%E6%97%85/","section":"post","summary":"赛博成圣之路","tags":["文件分享","Docker"],"title":"文件分享的折腾之旅","type":"post"},{"authors":null,"categories":null,"content":"前言 作为时不时就要出差的我，为了能够在外面的酒店也能玩到电脑，自然而然的打起远程操控电脑的注意。而纵观世界上任何一个远程串流软件，其必然的前提是——被控端设备一定是在开机状态 （废话） 。但是一直打开电脑不但费电费，而且容易被勤俭节约的同居人 “好心” 帮你关机。为了避免出现“想玩的时候折腾半天，发现是自己电脑关机”这种尴尬的情况，远程开机的需求自然就提了出来。\n物理层面的通电开机 总所周知，现在的电子设备基本上都有插电自启的功能，我们的电脑也不例外。\n因此我一开始的思路是买一个智能、可以联网开关的插座，对电脑实行物理层面的通断电而达到远程开关机的目的。\n主板的通电自启功能一般是默认关闭的，因此我们需要提前在主板中打开。我们只需要在bios中开启即可。每个厂家的bios不同，开启方式也不一样，但是基本都大同小异，例如在华硕主板中，在bios进入到Advanced Mode，在Advanced选项卡中点开高级电源管理，将断电恢复改为电源开启即可。\n接下来只要找一个好用的智能插座即可。一开始我瞄准的米家的智能开关插座（毕竟现在用的小米手机）\n​\n但！！！看着者这50元的售价，我的荷包在告诉我一定有其他更好的办法！对于家庭nas都是靠捡垃圾配出来的我，这么高端的插座显然不怎么符合我的气质（不是）。\n既然已经装了nas，那为何不在nas上作文章呢？\nWake On Lan——网络唤醒 Wake-On-LAN简称WOL，是一种电源管理功能；如果存在网络活动，则允许设备将操作系统从待机或休眠模式中唤醒。许多主板厂商支持IBM提出的网络唤醒标准。该标准允许网络管理员远程打开PC机电源，以便进行文件升级、资源跟踪和设备清点等工作。\nWake On Lan（wol）其实在很早以前就已经诞生，广泛到现在基本是一张主板就搭载这种技术。\n使用之前是一样要到bios中开启，跟之前通电自启一样，每个主板商的开启方式都不一样，但大同小异。还是以华硕主板举例：在bios进入到Advanced Mode， 点击APM Configuration， 并将Power On By PCI-E改为Enabled即可。\n改完bios后，我们还需要在Windows中设置一下方可。\n我们在设备管理器中打开网络适配器，右键你的网卡，点击属性\n点击高级选项卡，选到魔术封包唤醒，并设置为开启\n至此，被控端的设置便全部设置完成。接下来就要找一个合适的设备进行安装wol客户端，让这台设备发送数据包便可以远程唤醒了。而合适的设备——那自然是二十四小时不关机的设备啦。\nopenwrt wol 说到24小时不关机的智能设备，大多数人家里那肯定是路由器。而我正好有一台刷了openwrt的旁路由。\n我们进入openwrt的后台，找到网络唤醒，然后选择进入被控设备的ip/mac地址，最后点一下唤醒主机即可。\nDocker wol-go-web 唉，每次都要选择地址，好麻烦的，还有没有更方便，真正一键启动的办法呢？\n有的兄弟，包有的。\n在docker的神奇妙妙容器里面，有不少与wol相关的容器。个人觉得最方便的那就是chishin/wol-go-web，它可以只用一串链接就发送wol开机指令，真正做到了一键启动。\n部署也非常简单，以下是docker compse文件。\nservices: wol-go-web: image: chishin/wol-go-web:latest container_name: WolGoWeb restart: unless-stopped network_mode: host # 必须要用host模式 environment: - PORT=9090 # 指定端口号，可自行更改 - KEY=false 部署完成后我们只需要在浏览器输入http://服务器IP或域名:9090/wol?mac=需要唤醒主机的MAC地址即可。在外地还可以通过ddns/内网穿透来进行唤醒主机。\nDocker upsnap upsnap也是一个wol服务，虽然提供了好看的webui，但是单论开机方便而言，其实不如是chishin/wol-go-web那种一条链接直接开机来的舒服。\nBut！它可以输入设置关机指令！\n由于曾经试过串流软件卡死导致无法连接的主机，必须要重启的情况，显然光有wol是无法做到关机的，因此upsnap自然就被我看上了。\n部署upsnap也是非常简单\nservices: upsnap: container_name: upsnap image: ghcr.io/seriousm4x/upsnap:latest # images are also available on docker hub: seriousm4x/upsnap:5 network_mode: host restart: unless-stopped volumes: - ./pb_data:/app/pb_data # # To use a non-root user, create the mountpoint first (mkdir data) so that it has the right permission. # user: 1000:1000 # environment: # - TZ=Europe/Berlin # Set container timezone for cron schedules # - UPSNAP_INTERVAL=*/10 * * * * * # Sets the interval in which the devices are pinged # - UPSNAP_SCAN_RANGE=192.168.1.0/24 # Scan range is used for device discovery on local network # - UPSNAP_SCAN_TIMEOUT=500ms # Scan timeout is nmap\u0026#39;s --host-timeout value to wait for devices (https://nmap.org/book/man-performance.html) # - UPSNAP_PING_PRIVILEGED=true # Set to false if you don\u0026#39;t have root user permissions # - UPSNAP_WEBSITE_TITLE=Custom name # Custom website title # # dns is used for name resolution during network scan # dns: # - 192.18.0.1 # - 192.18.0.2 # # you can change the listen ip:port inside the container like this: # entrypoint: /bin/sh -c \u0026#34;./upsnap serve --http 0.0.0.0:5000\u0026#34; # healthcheck: # test: curl -fs \u0026#34;http://localhost:5000/api/health\u0026#34; || exit 1 # interval: 10s # # or install custom packages for shutdown # entrypoint: /bin/sh -c \u0026#34;apk update \u0026amp;\u0026amp; apk add --no-cache \u0026lt;YOUR_PACKAGE\u0026gt; \u0026amp;\u0026amp; rm -rf /var/cache/apk/* \u0026amp;\u0026amp; ./upsnap serve --http 0.0.0.0:8090\u0026#34; upsnap 开机 部署完成后在浏览器输入http://服务器IP或域名:8090即可进入upsnap的webui后台。\n点击右上角新增， 并输入备注、ip、mac地址、子网掩码便可\n当然，你也可以点击网络扫描，设定好ip网段以后便可以自动识别添加\nupsnap 关机 对于关机而言，我们需要额外设置一番。Windows端最好是安装并启用openssh。\n进入到设置\u0026gt;系统\u0026gt;可选功能\u0026gt;添加可选功能，点击查看功能，搜索并安装openssh\n设置完成以后，我们回到upsnap，在关机指令中输入sshpass -p \u0026#34;你的电脑密码\u0026#34; ssh -o \u0026#34;StrictHostKeyChecking=no\u0026#34; 你的电脑账号@电脑局域网ip \u0026#34;shutdown /s /t 0 /f\u0026#34;​\n最后拉到最下面点击保存即可。\n现在，你用其他设备登陆upsnap，就可以远程控制开关机啦。\n","date":1746534728,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1758717469,"objectID":"c291a862dc70afd41e0f3cfc22743e7e","permalink":"https://cyilin36.github.io/post/wol%E7%9A%84%E6%8A%98%E8%85%BE%E6%97%A5%E8%AE%B0/","publishdate":"2025-05-06T20:32:08+08:00","relpermalink":"/post/wol%E7%9A%84%E6%8A%98%E8%85%BE%E6%97%A5%E8%AE%B0/","section":"post","summary":"一切皆可远程","tags":["wol","Docker"],"title":"WOL的折腾日记","type":"post"},{"authors":null,"categories":null,"content":"\n《It’s My Cry!!!!!!!!》（又名《假如素世有机会改变过去》）是动画《bangdream！It’s mygo！！！！！》的二创作品，由b战up主马喽马打造的长视频，终于落下帷幕，迎来完美的结局。\n这份作品在我心里就是二创中最高的山、最长的河之一，是二创中顶点之一。其质量、篇幅、表现力、技术力都是一等一的强。\n我个人认为这部作品已经是不在《mygo》的框架内了，也不是局限于乐队、女女关系等标签之中。它始于《mygo》，沿用了里面的背景和设定，讲出了一个有着自己内核的故事——如何失去与如何去爱。看完之后让我有了想要安利和倾诉的念头。\n坏心思的神明实现了素世的愿望，她方得回到过去，去改变挽救那个对自己意义非凡的乐队。但crychic在所有的时间线上都是固定的锚点，是不可更改的事实，因此素世是所做的一切挽救是徒劳无功的。她撒谎、隐瞒，不断通过轮回获得情报进行操控，却怎么样都无法达到幸福的时间线。\n就像是那句名言——要先爱着自己，才能爱着别人，忽视自己的感情，只是一昧的想着别人，为别人而活，并不幸福，哪怕乐队中的大家真的跨过了宛如诅咒一般的第一次live，在日后也是很可能是矛盾再度爆发而导致乐队解散。正确的解法是和自己达成和解，和他人达成理解、成为互相信任的关系。剧中素世最后的破釜沉舟，并没有像以前一样去如何避免crychic的破灭，而是在祥子退队的时候理解并淡淡的关怀了祥子，让祥子真正成为了一个太阳、一个真正的人类。\n祥子也因为素世的温柔，和自己和解了，不但和原来的crychic成员维持着不错的关系而且还真正的解决了队内每个人的心里缺陷，真正意义上的达成了补全。这才是真正的爱。\n最让我没想到的是爱音，爱音这么好的一个女孩，我个人是想不应该走向BE，也不适合走向BE，索性爱音也成功回来了。素世和爱音两人在阳台上的交谈宛如生命中挚友相见，没有嚎啕大哭或者畅言欢笑，而是默契一笑，几句话之间便能交流一切，完美对应了她们之间的关系：爱音一直看着素世，素世也很了解爱音。\n看完后的感受，就像是刚刚打通muv三部曲一样，有一种“平淡和平才是真的好”的感受。素世所经历的一切，都成了自己重要人生中最重要的一部分，她在追逐祥子、被爱音拯救的过程中，领悟到了如何去理解别人，如何去爱。素世在经历了一切后和自己和解了，不在停留在原地、固执于追回旧日的春光，而是继续选择结束掉这一切后踏上前途未知的未来，选择把握当下，把握身边的幸福。而被素世爱着的祥子，也是成长了起来，变得可以理解他人、信任他人。\n最让我惊喜的是逆流爱音也是回归，并没有给故事留下一个遗憾，这让我这个大团圆爱好者真是欣喜若狂。这样的故事，或许才是真正符合bangdream的krkrdkdk的精神。\n","date":1742905928,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1758717469,"objectID":"504e8b2e55dc88458fe41e647591306d","permalink":"https://cyilin36.github.io/post/%E5%A6%82%E4%BD%95%E5%A4%B1%E5%8E%BB%E4%B8%8E%E5%A6%82%E4%BD%95%E5%8E%BB%E7%88%B1%E7%9A%84%E6%95%85%E4%BA%8Bits-my-cry-/","publishdate":"2025-03-25T20:32:08+08:00","relpermalink":"/post/%E5%A6%82%E4%BD%95%E5%A4%B1%E5%8E%BB%E4%B8%8E%E5%A6%82%E4%BD%95%E5%8E%BB%E7%88%B1%E7%9A%84%E6%95%85%E4%BA%8Bits-my-cry-/","section":"post","summary":"二创最顶尖的作品之一！！！","tags":["心情随笔"],"title":"如何失去与如何去爱的故事——《It's My Cry!!!!!!!! 》","type":"post"},{"authors":null,"categories":null,"content":"总所周知，公网ipv4的ip地址在中国那是相当的珍惜。为了一个固定、甚至只是动态的公网ipv4，无数人打爆运营商的电话，甚至是花费一大笔钱开通所谓的专线方可获得，虽然这种固定ip在发达地区是人手一个。\n但是我们访问家里的设备和运行的服务又要一个独立的ip，因此我们就发展出各种各样的技术，比如我之前写得搭建zerotier局域网\n但是这种方式需要在双方设备都安装客户端，且需要在网站上把设备加入到自己的局域网中，外人想要访问就显得很是麻烦，比如给网友分享自己私人网盘资源的时候。当我们有这种需求且没有公网ip的情况下，frp技术应运而生。\nFRP FRP——高性能的反向代理应用，作用是把流量从服务端转到客户端上。当流量访问到服务端的时候，frp便会把相关的流量转到部署了客户端的设备中中，这样我们就实现了外部网络访问到自己的设备了。\n那么说到这里，我想你也很敏感的注意到，咱们还是需要公网ip以便于我们可以直接访问到服务端。 我们是租用一台带有公网ip的云服务器来部署服务端。这样做的优势就在于租用云服务的成本通常要小于直接拉取专线，个人用户拉专线只是为了一个公网ip其实还是很亏的 （说得就是广东，连动态公网都不给的屑运营商）。\n购买服务器 在正如前文所述，在开始正式部署之前我们需要租用一个带有公网ip的服务器，按需购买即可。购买之前看清楚是否带独立的公网ip（只是开放数个端口的也可以，但是对frp有部分限制）、上下行带宽（服务器一般的带宽单位是Mbps/s，而我们日常生活中的流量速度单位是MB/s，前者除以8才能得到后者），可以的话尽量找大牌的服务器商，比如阿里云这类，选择中小服务器商有跑路的风险。\n配置FRPS（服务端） 我们需要在服务器部署frp服务端（frps），在客户端上部署frp客户端（frpc）。\nReleases · fatedier/frp · GitHub\n我们从上面的连接下载适合自己版本的frp（frp_windows_amd64）并解压，可以得到以下这几个文件：\n​\n我们首先把带frps字样的文件放到我们租用的服务器上，然后点开frps.toml，对frps进行基础配置。由于我只是需要转发http网页流量，因此我是这么写：\n#【frp服务端口，用于frps和frpc之间通信用的】 bindPort = 17603 #【http服务端口，用于传输http流量，适合网页流量传输】 vhosthttpport = 13470 #【frps和frpc之间的通信授权码，为了安全起见青改成复杂一点的】 auth.token = \u0026#34;xxx\u0026#34; 在fprs的配置中，tcp类型的流量是不需要单独设置端口的，且我们是需要在frpc配中设置；tcpmux则是需要单独设置端口，它支持服务端 TCP 端口的多路复用，允许通过同一端口访问不同的内网服务，但是我一直没搞明白，因此在此按下不谈。\n配置FRPC（客户端） 我们把带frpc字样的文件放在自己的设备上，然后点开frpc.toml，对frpc进行基础配置。由于我只是需要转发http网页流量，因此我是这么写：\n# 【公网服务器的ip地址】 serverAddr = \u0026#34;xxx.xxx.xxx.xxx\u0026#34; #【frp服务端口，用于frps和frpc之间通信用的，端口设置成和bindPort一样】 serverPort = 17603 #【frps和frpc之间的通信授权码，之前写什么这里就写什么】 auth.token = \u0026#34;xxx\u0026#34; [[proxies]] #代表一个项目的开始和结尾 name = \u0026#34;xxx\u0026#34; # 项目的名称 type = \u0026#34;http\u0026#34; # 项目的类型，前面我只是指定了http端口，因此这里我输入http localIP = \u0026#34;xxx.xxx.xxx.xxx\u0026#34; #本地ip，不一定是要frpc的ip，frp本身是有转发功能的，写入真实访问到的ip即可 localPort = xxxx #访问到的机器的具体端口 customdomains = [\u0026#34;xxxxx.xxxxx.xx\u0026#34;] #域名，这里是根据域名来流量应该转发到哪里端口 以上配置中，我是设置了http类型端口进行流量转发，并通过customdomains参数来规划每一部分流量的具体走向，因此我这里是输入自己的域名。\n域名配置可以看我之前写得这一片教程稍微剑走偏锋的nas方案——2 | cyilin的小房间，只要看域名那一块即可。\n对于tcp的流量，之前说过我们是不需要在frps指定一个tcp端口的，因为tcp会直接占用frps端的一整个端口，无法像是http类型这样通过customdomains来判定流量具体走向到什么端口。因此我们可以这么写：\n# 【公网服务器的ip地址】 serverAddr = \u0026#34;xxx.xxx.xxx.xxx\u0026#34; #【frps和frpc之间的通信授权码，之前写什么这里就写什么】 auth.token = \u0026#34;xxx\u0026#34; [[proxies]] #代表一个项目的开始和结尾 name = \u0026#34;xxx\u0026#34; # 项目的名称 type = \u0026#34;tcp\u0026#34; # 项目的类型，前面我只是指定了http端口，因此这里我输入http localIP = \u0026#34;xxx.xxx.xxx.xxx\u0026#34; #本地ip，不一定是要frpc的ip，frp本身是有转发功能的，写入真实访问到的ip即可 localPort = 1029 #访问到的本地机器的具体端口 remotePort = 6000 #监听服务器的端口，会把该端口的所有流量都转发到localPort设置的端口上 反向代理 根据前面的步骤，我设置了13470端口作为http的流量转发端口，我们需要把访问到公网服务器的流量转发到这个端口上，因此反向代理或者端口转发就得派上用场了。而反向代理可以挂上SSL证书且可以实现端口复用，因此我优先选择使用反向代理。\n至于SSL证书和反向代理的使用请看之前的博客，翻到SSL证书这一部分。\n在这里需要注意的是，我们设置的反向代理后端地址是写本机地址（127.0.0.1）的http流量转发端口。以上面的例子来说，就是写入127.0.0.1:13470​\n弄完之后，我们在在frps目录下启动powershell并输入./frps -c ./frps.toml，在frpc目录下启动powershell并输入./frpc -c ./frpc.toml，随后在浏览器进行连接测试即可，能成功访问那就是正常运行。\nFrp常驻后台 上面使用命令启动frp不但容易误触，而且每次启动也不方便，关机后还得再次输入命令，因此我们需要一个自动化启动的方案。由于我使用的是windows作为演示，因此我这里使用**nssm**将frp注册为windows的系统服务，从而达成自动开机启动frp。\n我们下载合适自己系统的**nssm，并放到一个合适的目录上。打开cmd，使用cd命令进入到含有nssm.exe**的文件夹上。\n然后我们输入命令nssm install，就可以得到这样一个弹窗。\n在Application Path中选择frps的exe文件；Statup directory会自动填写到frp的根目录，不用管；Arguments则是填写-c frps的配置文件路径既可；Service name则是随意，指的是服务的名称，自己能记住就行，不能够和已有的服务同名。\n​\n然后我们点击Install service既可成功注册，frpc端也是这样如法炮制。\n接着我们在搜索并打开“服务”，找到刚刚注册好的frp服务（Service name），然后点击启动即可。需要注意的是我们要右键frp服务并打开属性， 并把启动类型改成自动，这样才能一开机就自启动frp。\n​\n至此，便是我目前配置的frp。\n如果不是该死的运营商天天想着拿ipv4收钱，我也不用这么麻烦。但是当我看到阿里云的ipv6开通居然要额外缴费，真是感慨：一山还有一山高啊。\n","date":1738848728,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1758717469,"objectID":"271d094428de28ac37a1e4f0e1b509b4","permalink":"https://cyilin36.github.io/post/frp-%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E7%9A%84%E4%B8%AA%E4%BA%BA%E9%85%8D%E7%BD%AE/","publishdate":"2025-02-06T21:32:08+08:00","relpermalink":"/post/frp-%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E7%9A%84%E4%B8%AA%E4%BA%BA%E9%85%8D%E7%BD%AE/","section":"post","summary":"运营商最司马的一集","tags":["中继转发","frp"],"title":"FRP 内网穿透的个人配置","type":"post"},{"authors":null,"categories":null,"content":"前言 作为一个合格的二次元，看番是必不可少的一个环节。看番的方式就像是兜兜转转的一个圆圈，从以前的字幕组下载磁力链接资源→各种盗版资源网站在线观看→正版平台欣赏，现在隐隐又变回了字幕组下载磁力链接资源。\n​\n选择合适的追番方式 看番方式的不同，自然也有着各自的优缺点：字幕组提供的磁力可以下载到高画质影音资源，但是面临着更新天然会慢一点、下载速度不一、资源寻找环节花费时间等困难；盗版资源网站可以在线方便的观看各种番剧，但是面临着画质不清晰、在线缓冲速度慢等问题；正版番剧优势是更新及时 （现在不一定，沟槽有点不同步播放，谁想出先审后播的？难绷） ，且画质得到最基本的保证，有些平台甚至有弹幕；但这些可能需要你花费一定的金钱、还有可能看到所谓的特供版本 （花钱看删减版简直就是脑子有坑！） 。\n我们需要分辨一下这些方式的优劣，找到合适自己的。想看正版的可以去b站、巴哈等地方进行观看\n​\n盗版在线资源上谷歌一搜也一大把\n​\n这些不成问题，下面要着重讲的是如何下载字幕组提供的资源。\n如何下载字幕组发布的资源 什么是种子，什么是磁力链接 首先我们需要大概知道磁力链接和种子文件。以下是百度百科对磁力链接的定义\n磁力链接（Magnet URI scheme），是中进行信息检索和下载文档的电脑程序。和基于“位置”连接的（URL）不同，磁力链接是基于（metadata）文件内容，属于（URN）。也就是说，磁力链接不基于文档的或定位符，而是在中，通过值来识别、搜索来下载文档。因为不依赖一个处于启动状态的主机来下载文档，所以特别适用没有中心服务器的对等网络。举例来说，一个常见的磁力链接形式为“magnet:?xt=urn:btih:”。\n接下来是是百度百科对BT种子的定义\n一种“.”文件，装有BT（BitTorrent）下载必须的文件信息，作用相当于下载里的链接。\n一个用户要利用BitTorrent协议下载文件之前，先要从某个网站下载一个包含该文件相关信息的“.torrent”文件。\n该种子文件包含一个称为“追踪器（tracker）”的服务器节点（因特网上有很多追踪器）的地址，该追踪器负责维护参与一个特定文件分发的所有对等方的信息。\n简单来说就是通不同的方式来询问哪个人的电脑有资源且在上传，然后从别人那里拉取下载资源。我们下载的字幕组番剧资源是需要磁力链接/种子才能顺利下载。那么这些东西不是像普通的直链一样直接输入到浏览器就可以下载到的，是需要专门的bt下载器。BT下载器有很多，但是大部分常用的也就是qbittorrent(还有一个增强版)和比特彗星了。这边我建议使用qbittorrent，因为这个下载器用的人众多，并且后面介绍的工具对它都有良好的支持和配合。\n安装并设置好BT下载器 以qbittorrent举例，我们进入到qbittorrent的下载地址，下载到合适系统的最新版本（图一是官方版本，图二是增强版）。\n​\n​\n下载完毕后双击exe安装，选择一个合适的路径安装即可。（我觉得这么简单的程序安装是谁都会吧……大概）。安装完毕并启动后，我们先点右上角的设置（齿轮样式的图标），选到速度，并把自己的上传速度先设置一个合适的值。\n​\n这是因为国内现在三大运营商对于打击pcdn都非常严厉，而pcdn的一个特征就是上传量非常大；bt的一大特点就是人人为我，我为人人，如果我们不进行限速，很容易被别人疯狂从你这里下载东西从而导致上传量过大，然后导致家里的宽带被运营商一刀切然后废了，因此最好设置一个合理的上传限速以免超标。个人建议一天的上传量不要超过80g会比较保险。这些都是针对家庭宽带，企业、专线等宽带另算。\n现在我们再次回到主页面，再次看到右上角，我们获取到的磁力链接/种子输入到qittorrent中，即可开始下载。\n​\n资源获取与RSS链接 从资源站点获取磁力/种子 我们只是有下载器，还是需要一个方便快捷的资源获取方式才算好用。那么我们怎么知道字幕组的更新呢？我们可以用各大资源站点去寻找，比如VCB字幕组官网、nyaa、蜜柑计划、动漫花园（这个命名导致我第一次还以为是什么盗版在线观看网站来着）等。我们直接去搜索番剧名称即可搜索出来，然后选择你想看的集数和字幕组，复制磁力链接/下载种子文件，然后用qbittorrent下载即可。\n​\nRSS订阅更新 然而这也很麻烦，每次番剧的更新我们每次都得上去网站然后挑选资源，也是很浪费时间。因此我们需要一个手段/工具来自动获取磁力/种子，最好还能自动下载。这就是本次文章的重点——RSS链接。\n我们看看RSS的定义\n（也叫聚合内容）是一种基于XML的标准，在互联网上被广泛采用的内容包装和投递协议。RSS(Really Simple Syndication)是一种描述和同步网站内容的格式，是使用最广泛的XML应用。RSS搭建了信息迅速传播的一个技术平台，使得每个人都成为潜在的。发布一个RSS文件后，这个RSS中包含的信息就能直接被其他站点调用，而且由于这些数据都是标准的XML格式，所以也能在其他的终端和服务中使用，是一种描述和同步的格式。\n简单来说，就是我们可以通过RSS来方便快捷的获取字幕组更新的资源。而qbittorrent也是支持这一点的。\n启用qbittorrent rss，我们先去设置里面，找到RSS，勾选启用获取RSS订阅。如果后续还想设置自动下载，那么也将启用RSS Torrent自动下载勾选上。\n​\n接着我们点开上方的视图，将RSS阅读器勾选上。\n然后选择RSS选项卡，选择新RSS订阅，接着把RSS链接输入进去即可\n那么我们如何找到适合的rss呢？以**蜜柑计划**举例，我们进入后搜索想要到想要的番剧，进入页面后可以看到诸多字幕组分享的资源。\n我们找到所需要的的字幕组，点击橙底白色的WiFi图标\n就会转跳到一个新的页面，我们把该页面的链接复制粘贴的qbittorrent中，即可成功完成订阅。我们双击右边的项目即可进行下载。\nRSS自动下载 如果前面把rss自动下载也勾上了，那么我们可以对每一个rss链接进行单独的设置，让qbittorrent自动下载。我们点击rss下载器，新建一个规则，并命名。\n​\n选中你建立好的规则，然后勾选已经拥有的rss订阅，让这个规则作用于该rss订阅。\n​\n而这里可以进行关键词筛选，可以筛选出你需要的资源，比如你只需要简体中文的资源，那么可以在必须包含中写上简体，并且不需要任何繁体，那么可以在必须不含处写上繁体。更具体的规则可以把鼠标悬停在输入框上即可查看。\n​\nrss下载器还可以对每一个规则的下载路径之类的进行单独设定，方便更好的分类整理，可以多看看，把它调教出符合自己的形状。\n下载番剧的重命名和整理 前面的一系列步骤其实基本已经完成了rss的自动化下载，但对于有收集需求/需要批量获取元数据的人来说，我们还是需要对其进行规范化的命名。比如emby之类的媒体库是要规范的命名才好去进行元数据的刮削。\n在这里有两个思路，一个是下载完成后我们用工具批量/手动逐个对番剧进行重命名，第二个就是在下载之初便对文件的命名进行修改。第一个由于要还是需要一定时间进行命名修改，且对正在追的番剧来说不大友好，因此我们选后面一种思路。而这里就有个工具可以帮助我们：Ani-Rss。\nAni-RSS Ani-Rss（以下简称ass）是一个rss订阅工具，可以和Transmission，qBittorrent，Aria2进行搭配来下载资源，就相当于前文说得rss阅读器和下载器，但是功能更为强大，对番剧进行了特化，且对蜜柑计划资源站有着深切的联系。它通过访问下载器的webui来对bt下载器进行控制。\nass的安装 首先我们需要对下载器继续一定的额外设置，我们继续用qbittorrent进行举例，用它来演示开启webui并让ass成功访问。我们点击设置\u0026gt;web ui，把web用户界面勾选上，ip地址选择本机ip（cmd输入ipconfig即可查询）。端口输入一个10000以上的不常用端口（这非常重要！！！）\n在验证处设置自己的账号和密码，最后点击确定即可\n现在我们来到局域网中任意一个带有浏览器的设备，输入刚刚的ip:端口号，在跳出来的页面中输入自己设置的帐户和密码，即可成功开启访问qbittorrent的webui\n​\n接着我们进入github页面下载这个：ani-rss.win.x86_64.zip。并在电脑上解压，双击ani-rss-launcher.exe启动ass，并在局域网中任意一个带有浏览器的设备输入运行了ass电脑的ip:7789（ass webui默认端口）进入到后台，并输入帐户和密码解锁（默认帐户密码都是admin）。\n​\n​\n点击右上角设置\u0026gt;下载设置，下载工具选择qbittorrent，地址是qbittorrent webui的地址（去浏览器那边复制一下），帐户密码也是qbittorrent的。然后点击下方的测试，出现登陆成功的字样便是代表ass成功访问qbittorrent了。\n​\n保存位置的写入绝对路径，ass会默认在该目录下生成各种不同番剧的文件夹并把番剧分门别类的放入到对应文件夹中\n​\nass的使用 请优先使用蜜柑计划的rss，会方便不少。\n打开ass的webui，看到右上方的添加\n弹出的页面中，第一个是Mikan计划的rss解析，我们可以到蜜柑计划中找到相关番剧的rss，在rss地址中输入并点击确认后，ass会自动在解析该rss连接并根据蜜柑计划中信息自动配置好大部分设置。\n当然我们还可以点击带摄像机标志的Mikan，可以直接连接到蜜柑计划\n我们在这里可以直接对蜜柑计划已有的番剧进行搜索并订阅rss，更加方便。\n我们点击添加，选择一个合适的字幕组进行订阅。\n这里的设置非常多，比如可以设置排除项、匹配项等等，大部分的设置都是自动配置好了的，我们只需要点击预览，看看最后下载的资源是否符合我们的要求。\n在这里，我们需要重点看一下备用rss。这是一个非常好用的自动化洗版功能。\n当主rss还未更新，但是备用rss已经更新时，会先下载备用rss，等主rss更新后会自动替换，非常适合洗版，这也是我选择ass的一个重要原因。使用备用rss我们需要到设置\u0026gt;基本设置\u0026gt;rss设置中把备用rss打开。\n当然，番剧rss订阅很多地方都有，我们也可以不用蜜柑的源，用其他的也可以，选择other并写入rss以及相关信息即可，可参考上面的配置\n注意 ass是不支持聚合订阅的，因此不需要去蜜柑计划网站中点击订阅。\n结束 总的来说，其实还是靠rss订阅来获得字幕组的资源，上面诸如ass等工具只是更好的辅助我们管理相关的rss。\n历史就像个圈子，兜兜转转还是回到了最初的时候，在版权查杀、先审后播、视频降码等一些列debuff综合下，也不知道什么时候动画流媒体才会有当初的盛况了。\n","date":1738845128,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1758717469,"objectID":"bf9b080a41a00b3d5041a0a631c0acca","permalink":"https://cyilin36.github.io/post/%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E8%BF%BD%E7%95%AA/","publishdate":"2025-02-06T20:32:08+08:00","relpermalink":"/post/%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E8%BF%BD%E7%95%AA/","section":"post","summary":"让追番变得不再牛马","tags":["追番","bt"],"title":"如何优雅的追番","type":"post"},{"authors":null,"categories":null,"content":"前言 在前面我们设置了一个已经成功搭建了一个nas系统，并且在其他设备上成功访问了nas。但是目前也就只能在同一个局域网中才能访问。还得用其他其他手段才能在外部网络中连接上家里的nas设备。如果还没有搭建nas系统，可以参考前面的博客：稍微剑走偏锋的nas方案——1\n现在，让我们解决如何随地访问的问题。\n我们在局域网访问nas，是通过在相关软件（比如浏览器和资源管理器）输入nas的ip地址和端口来访问，那么在同理在外地访问也是用同一套方案，在互联网上连接到我们家里面nas设备的ip地址即可。所以，解决思路是通过各种手段来在互联网来访问我们nas的ip地址。\n可以在互联网直接访问到的ip我们称为——公网IP，公网ip现在也分两种：ipv4和ipv6。在我国，由于分配到的公网ipv4数量稀少，因此绝大部分人都没有公网ipv4 （不同地区不同情况，据说在香港公网ipv4几乎是多到用不完，可恶） ；公网ipv6虽然数量很多且现在家庭宽带几乎都有，可以做到每台设备一个，但是还没有完全普及，而且给的公网ipv6基本都是动态会变动的那种；并且ipv4和ipv6又互不相通的，因此我们远程在互联网访问就分化出以下三个方案：\nDDNS转发公网ip 内网穿透 中继转发 DDNS转发公网ip 首先我们需要了解DNS和DDNS是个什么玩意：\n（omainameystem，缩写：）是互联网的一项服务。它作为将域名和P地址相互映射的一个分布式数据库，能够使人更方便地访问互联网。（ynamicomainameerver，动态域名服务）是将用户的动态IP地址映射到一个固定的域名解析服务上，用户每次连接网络的时候客户端程序就会通过信息传递把该主机的动态IP地址传送给位于服务商主机上的服务器程序，服务器程序负责提供DNS服务并实现动态域名解析。\n简单来说，就是我们平时输入的网址其实是匹配一个一个服务器的ip，输入网址就会解析处相对的ip，这就是dns。 为了避免因为动态ip问题而需要不停的修改网站对应的ip这个问题，把ip实时和域名组合在一起，叫ddns。\n如果有静态公网ip那么可以在浏览器直接输入nas的公网ip:端口即可成功访问nas，手上没有相关静态公网ip但有动态公网ip的才需要用ddns技术。那么我们需要准备两样东西：个人域名、ddns软件\n个人域名 购买 个人域名的获取需要到各家互联网域名商去购买，我这边使用的是阿里云。\n我们首先进入阿里云官网并注册登陆，然后再搜索栏搜索域名注册​\n​\n然后搜索你想要建立的域名，比如asdadsahdah​\n​\n挑选一个还未注册且价格便宜的入手即可，比如asdadsahdah.top。\n网站权限的账户密码获取 购买成功后，我们点击右上角控制台\u0026gt;全部域名\u0026gt;域名列表，确认购买的域名。确认入库后，点击右上角头像\u0026gt;AccessKey，然后勾选提示并点击继续使用云账号AccessKey。\n​\n接着点击创建AccessKey，然后完成一系列验证后就可以拿到一个AccessKey ID和AccessKey Secret。请保管好这AccessKey ID和AccessKey Secret，拿到的人相当于对该网站拥有实际控制权！一定要保管好且不要泄密，就和你的steam号不外借是同一个道理！ 我们要复制好AccessKey ID和AccessKey Secret，这两个在关闭页面就无法在看到了，因此要提前存放好。\nDDNS软件的选择 DDNS软件的选择有很多，比如ddns-go，lucky等，这边使用对windows操作更加顺手的lucky来作为演示。\n我们下载完lucky并安装在nas上以后，启动lucky，并在右下角小图标处右键lucky图标，设置为开机自启动，然后点击打开lucky后台进入到webui页面\n我们输入账号和密码（默认都是：666），点击设置，把管理账号和密码修改成你自己的。外网访问按需打开。\n设置好并重新登陆lucky后台，我们点击动态域名\u0026gt;添加任务，然后把相关信息填写上，域名写刚刚购买的域名，AccessKey ID和AccessKey Secret就填写刚刚建立的。类型选择上如果有公网ipv4就选择公网ipv4，有公网ipv6就选择公网ipv6，都有的话建议多添加一次任务，把ipv4和ipv6都解析了。\n​\n注意：我们购买的域名一般都是主域名，子域名是挂载在主域名下的，不需要额外购买，因此我们可以在域名列表处写入子域名。\n子域名命名规则其实很简单，组合方式为：你要的域名名称.主域名，和之前一样，比如我购买的主域名为asdadsahdah.top，那么子域名我可以设置为abc123.asdadsahdah.top，其中这个abc123可以是任何英文和数字。\n都填入正确并添加成功后应该可以看到这个页面\n​\n可以看到公网ip未改变或者成功上传ip的相关字样\n远程访问nas 现在我们已经成功将ip和域名配置成功，那么就可以来访问测试一下。在浏览器输入域名:端口即可访问。前文我安装了飞牛os和emby服务器，运行的端口号分别是5666和8096，那么我在浏览器输入域名:5666和域名:8096既可。\n​\nSSL证书 我们上面的一系列操作完成后都只是能在http上访问，而http在现在互联网中其实相当于明文传输，相当不安全，因此建议加上SSL证书来达成https访问。至于SSL是什么东西，请看下面的文章：\nSSL证书——百度百科\n添加SSL证书 之所以前面选择lucky作为ddns软件，就是因为它不单止可以作为ddns转发，还可以帮我们续签SSL证书。我们点击SSL/TLS证书\u0026gt;添加证书，添加方式选择ACME，证书机构推荐使用Let\u0026#39;s Encrypt，验证方式选择阿里云（在什么地方买得域名就选择什么），ID和Secret写入之前获取的AssessKey，域名写入刚刚ddns设置的域名（比如前文的abc123.asdadsahdah.top），也可以写入你的主域名和*.主域名（比如asdadsahdah.top和*.asdadsahdah.top）\n​\n反向代理 添加完SSL证书后，我们还需要设置反向代理，把https的域名指向本机的ip\n我们点击web服务\u0026gt;添加web服务规则，设置一个端口号，然后把TLS打开。接着点击添加子规则，前端地址写入ddns设置的域名， 后端地址写入本机ip:端口，在点击添加web服务规则即可。\n​\n如图，这样一番设置后，我在浏览器输入https://abc123.asdadsahdah.top:10010，先是会通过ddns来解析到nas公网ip地址，然后通过lucky的反向代理，10010端口的流量指向192.168.110.1:8096，我们就可以浏览到192.168.110.1这台设备8096端口上的内容了。而前面emby服务是运行在8096端口，因此输入https://abc123.asdadsahdah.top:10010即可远程访问机器上的emby服务器。小姐姐就可以随时随地的来到我们身边了。\n反向代理的端口是可以复用的，因此你可以把abc123.asdadsahdah.top:10010指向emby，把gskandp.asdadsahdah.top:10010指向nas系统等\nIPV4和IPV6互不相通 前面说了，ipv4的网络无法访问只有ipv6地址的网站，反过来也一样，因此你需要确认你的域名和你的流量都支持同一个网际协议版本（InternetProtocolversion，缩写：ipv）。如果你和我一样，只有公网ipv6，那么在通过这样的办法连接家里设备之前，先去测试一下ipv6吧。\n​\n现在国内的绝大部分手机都是兼容ipv4和ipv6流量的，因此手机流量应该可以直接访问ipv6地址的网页。\n目前阿里云平台的ipv6转ipv4是需按照流量收费的，而赛博善人cloudflare则是不用，我们可以免费使用cloudflare的cdn服务来实现v4v6均可访问。 但由于cloudflare是美国公司，因此速度方面会比较感人，有舍有得吧。碍于篇幅这里暂且搁置不谈，以后有机会再填坑。 （咕咕咕）\n内网穿透 如果家里没有公网ip，那么我们得用内网穿透的方式来把两台设备连接在一起。内网穿透的定义是\n内网穿透，也即 NAT 穿透，进行 NAT 穿透是为了使具有某一个特定源 IP 地址和源端口号的数据包不被 NAT 设备屏蔽而正确路由到内网主机。\n在这里，我选择zerotier作为内网穿透工具，它通过虚拟局域网（VLAN） 技术将不同设备连接到一个“虚拟的局域网”中，让设备随时随地都可以互相访问。\n注册并配置zerotier客户端 我们必须先去zerotier注册并并且建立一个虚拟局域网先。\nZeroTier | Global Networking Solution for IoT, SD-WAN, and VPN\n设置zerotier局域网 注册并登陆zerotier后，选择free计划，然后我们可以看到这个页面\n​\n我们点击上面的Create A Network就可以看到下面多出一个条目\n​\n点击进入后，我们首先来到，我们需要注意以下几个地方\nNetwork ID #该局域网的识别码，对于任何设备想要添加进入这个虚拟局域网都需要这个ID Name #给该局域网设置名称，任意即可 Description #给该局域网设置相关描述，任意即可 Access Control #加入局域网的控制权限，请尽量保持Private，这样每个设备加入局域网都需要在你的zerotier帐户上同意后方可加入，可以提高安全性 IPv4 Auto-Assign #请尽量选择easy里面的几个网段，这些都是容易记住的，不建议在advanced里面自己设置网段 安装zerotier docker客户端 我们可以到zerotier的Download处下载到相关系统的客户端，想要安装在nas系统里面的可以选择docker版本。以飞牛os的docker为例。\n在docker中搜索并安装zerotier\n​\n然后建立镜像，记得勾选开机自启动，在存储位置处添加路径映射，把一个你想要放置zerotier文件的文件夹映射/var/lib/zerotier-one文件夹，比如\n​\n功能处选择使用高权限执行容器​\n网络选择host（先取消勾选bridge然后再选择host）\n​\n点击设置\u0026gt;SSH，打开SSH功能，我们需要远程ssh来给zerotier容器添加Network ID​\n​\n打开任意一个ssh工具，这边我使用的是MobaXterm。打开MobaXterm，点击Session\u0026gt;ssh，Remote host ***** 输入nas的ip地址​ 。\n​\nnas的ip地址可以再nas的系统设置\u0026gt;网络设置中找到\n​\n对着左侧列表的ip地址右键选择Connect as…，然后输入自己nas的账户名，这样就成功连接上nas的ssh\n​\n接下来所有的命令我们需要在root权限下，因此我们输入sudo -i，然后输入自己nas的密码来进入到root权限中。注意，输入密码的时候是不会显示密码的，要盲打\n​\n接下来执行以下操作\ndocker ps #查看docker中zerotier容器的名字，可选，其实在fnos中的docker看也一样 docker exec -it zeroier容器名字 zerotier-cli status #查看节点状态，返回 200 info 就算成功 docker exec -it zeroier容器名字 zerotier-cli join zerotierID #加入虚拟局域网，zerotierID就是你的Network ID 此时再度进入zerotier的官网并进入你方才建立的局域网，现在你应该发现就会有一个设备出现在页面上\n​\n​Name是给添加进入的设备起名称，可以随意，Managed IPs则是虚拟局域网内的ip，这个ip就是zerotier局域网的ip。这样一台设备就真正的加入到虚拟局 …","date":1735734728,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1758717469,"objectID":"6a764783fbdd0779781c848f6ba25ca2","permalink":"https://cyilin36.github.io/post/%E7%A8%8D%E5%BE%AE%E5%89%91%E8%B5%B0%E5%81%8F%E9%94%8B%E7%9A%84nas%E6%96%B9%E6%A1%882/","publishdate":"2025-01-01T20:32:08+08:00","relpermalink":"/post/%E7%A8%8D%E5%BE%AE%E5%89%91%E8%B5%B0%E5%81%8F%E9%94%8B%E7%9A%84nas%E6%96%B9%E6%A1%882/","section":"post","summary":"让家里的小姐姐来到你的身边~","tags":["nas","DDNS","中继转发","域名"],"title":"稍微剑走偏锋的nas方案——2","type":"post"},{"authors":null,"categories":null,"content":"经过前面的折腾，我们已经搭建好了一个初步的媒体影音库，但是有一个致命的缺陷\n——**只能在局域网中使用，在外部网络无法随时随地的访问我们的emby/jellyfin服务器。**​~~我们无法在外面看小姐姐了。~~\n想要解决这个问题，我们可以进行拆分成两个问题并逐个解决：\n随时访问——一台7×24小时的机器上运行emby 随地访问——利用域名解析/内网穿透等技术进行设备之间互相访问 随时访问 NAS（Network Attached Storage）：即网络连接存储，是一种专用的数据存储设备，它以较低的能耗运行，并通过网络文件传输协议实现数据的共享和存储。由nas来当作一个7×24小时不关机的设备是再合适不过了，并且nas本身其实说白了也就是一台电脑，我们依然可以在上面安装emby/jellyfin服务器，这样就实现了一个几乎不关机的影音媒体库了。\n搭建思路 前文所说，nas本质上也就是一台电脑 （你甚至可以把主力电脑当作nas，只要你的电脑不关机，那就是好nas！） ，我们像是搭建电脑一样进行选择——成品nas/自建nas。\n成品nas 有着较高的售价的缺点，相比起自建nas简直可以说奸商抢钱，但是胜在方便省心，有着较为成熟的系统和靠谱的售后为你形形色色的数据保驾护航。\n自建nas 虽然比起成品nas，总体价格会便宜不少，可以做到更便宜的价格更高级的配置。但需要跟组装普通电脑一样，我们会进行一系列但不包括买配件进行组装、安装合适的系统等一系列蛋疼的操作，还需要自己承担售后问题，自己对自己的数据负责。\n因此，一个合适的搭建方案就尤为重要。\n硬件挑选 由于本质上我们是搭建一个存储器，因此我们的配置不需要多高，捡一下垃圾足以完成，比如我的配置清单\n硬件 配置 理由 CPU i3-8100 带核显可以有效缓解视频解码压力，说不定还能打打小游戏 内存 金龙惠宇 8g×4 个人挂载的服务器有几个挺吃内存的 主板 华硕 b360m tuf 适配cpu就行，最好选项硬盘接口多的 电源 长城电源 500w 玩的就是心跳 系统盘 骁麟256GB 我指存放系统，因此用不着很大 以上垃圾配件在二手网/拼多多都可以找到不少好价格，个人花费差不多在800元（会砍价应该可以做到更低），相信各位可以找到更具性价比的方案\n接着就正常的组装电脑即可，这里就不在赘述，如有不懂，请看vcr：\n【装机教程】全网最好的装机教程，没有之一_哔哩哔哩_bilibili\n安装系统 按照常规步骤，这里应该就是挑选一个成熟的nas系统进行安装，但介于windows的GUI之便利和教程数量之多，还有对炸机后数据恢复的考虑，这里我的思路是：\n把数据存储在windows上，并在hyper-v虚拟机上运行nas系统，通过SMB网络文件共享，让nas系统可以读取、管理windows上的数据。\n——就做到Windows GUI我要，小姐姐数据安全我也要。\nWindows的安装 首先我们的机器是需要长期开机，因此我们需要一个稳定的windows系统 （时不时偷偷更新的windows是屑） ，这里我选择了WIN11LTSC版本（企业版长期服务版本）\n对于如何安装windows这里也不多赘述，我相信你们一定会安装。如果真不会，再看vcr：\n​【装机教程】超详细WIN10系统安装教程，官方ISO直装与PE两种方法教程，UEFI+GUID分区与Legacy+MBR分区_哔哩哔哩_bilibili​\n设置网络共享 点开设置\u0026gt;网络和Internet\u0026gt;高级网络共享设置\u0026gt;高级共享设置，把选项设置为如图所示\n然后进入本地安全策略\u0026gt;帐户策略\u0026gt;帐户锁定策略，将设置更改为\n如此操作可以避免因为权限、密码输入错误等问题导致无法读取数据\n接下来，对着我们需要进行共享的文件夹设置为共享：右键属性\u0026gt;共享\u0026gt;选择共享\u0026gt;选择一个用户进行共享（图方便可以选择everyone）​\n然后选择高级共享\u0026gt;权限\u0026gt;你更改选择的用户，把完全控制勾选上，\n这样，该用户边对这个文件夹拥有完全控制的权限了。\n我们可以处于同一局域网的用其他电脑，在文件资源管理器\u0026gt;网络中检测是否可以正确发现你新安装的电脑，接着选择已发现的新电脑，输入你之前选中帐户的用户名和密码访问共享文件夹，并尝试对共享文件夹内进行添加/删除文件测试。\n如果没有发现，请在其他电脑的文件资源管理器地址栏路径中输入\\\\新电脑ip地址（新电脑ip地址可以查看路由器或者在cmd中输入ipconfig来查询），这样就可以顺利的通过网络访问新电脑的共享文件夹了。\n‍\n至此，Windows的smb设置是告一段落，在这里我们完全其实就可以把这个Windows当作一台win nas来使用了。我们就直接可以把emby等服务放到这台电脑上运行来达成随时访问的效果。\n如果你安装的是和我一样的LTSC版本，那可以在设置\u0026gt;系统中把远程桌面打开，然后在主电脑输入新电脑的ip、输入新电脑的帐户密码了远程访问桌面，脱离视频数据线的限制。\nHyper-V安装NAS系统 虽然前面已经达成了目的，但是我个人认为单纯的靠smb来远程访问文件还是过于粗糙了，因此还是用虚拟机的方式安装一个nas系统，以此达成更方便管理数据的目的。\n安装Hyper-v 在 Windows 和 Windows Server 中安装 Hyper-V | Microsoft Learn\n管理员身份打开powershell并输入Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V -All等待下载安装完毕。\n安装NAS系统 我这里选择最近还挺火的飞牛OS进行安装。我们进入下载页面下载最新的固件，保存在新电脑的硬盘内。然后打开Hyper-V管理器，选择虚拟交换机管理器​\n然后选择新建虚拟网络交换机\u0026gt;外部\u0026gt;建立虚拟交换机​\n选择你的网卡，然后点击确认即可\n这一步是建立一个虚拟交换机，让真实的物理网卡连接在交换机上，宿主机和fnos则是通过虚拟交换机间接和物理网卡链接在一起，这样宿主机和fnos就在网络上是同一个层级，方便我们后面用其他设备用浏览器去登录处于hyper-v中的fnos。\n下一步选择新建\u0026gt;虚拟机​\n名称随意，指定代数选择第一代\n内存分配按需分配，只是单纯做数据管理的不在上面挂载服务，4GB绰绰有余。分配网络选择你刚刚建立好的虚拟网络交换机，连接虚拟机硬盘不知道的话就默认即可，安装选项选择从可启动的 CD/DVD-ROM 安装操作系统并选中下载好的固件\n​\n最后配置选择如图所示\n​\n这样我们成功就建立了一个虚拟机。接下来双击新建立的虚拟机，选择启动，按照提示一步一步操作即可安装好虚拟机，最后在浏览器（只要在同一局域网内的设备即可）输入红框中的地址即可进入到飞机OS中，完成初始化的设置\n飞牛OS读取Windows smb共享文件夹 此时我们在浏览器进入飞牛os，点击文件管理\u0026gt;远程挂载\u0026gt;挂载远程文件夹\u0026gt;smb，把信息填写完整即可。\n这样，在飞牛中进入​文件管理\u0026gt;远程挂载\u0026gt;挂载远程文件夹​ ，双击挂载的文件夹便可以管理共享文件夹，在飞牛的手机端上也可以看到挂载的远程文件夹了。\n飞牛OS中安装EMBY 如果不想要在Windows中挂载emby，也可以选择在飞牛中挂载，个人建议选择应用中心的emby\n​\n当然docker中的也可以\n但，有现成的为什么不用现成的呢？\n安装教程可以参考前篇。\n需要注意的是在新建媒体库的时候，把文件夹的路径选择网络​\n然后选择你新电脑的ip地址，并选择路径即可。\n","date":1735389128,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1758717469,"objectID":"69cbb60d15217a39026e8c8e9f18dc65","permalink":"https://cyilin36.github.io/post/%E7%A8%8D%E5%BE%AE%E5%89%91%E8%B5%B0%E5%81%8F%E9%94%8B%E7%9A%84nas%E6%96%B9%E6%A1%881/","publishdate":"2024-12-28T20:32:08+08:00","relpermalink":"/post/%E7%A8%8D%E5%BE%AE%E5%89%91%E8%B5%B0%E5%81%8F%E9%94%8B%E7%9A%84nas%E6%96%B9%E6%A1%881/","section":"post","summary":"我要给小姐姐一个温暖的家","tags":["nas","emby","影音","虚拟机"],"title":"稍微剑走偏锋的nas方案——1","type":"post"},{"authors":null,"categories":null,"content":"warring！ 本文仅为技术分享，阅读前请确保已经年满18且周围无人！\n当我们花重金购置硬盘，并把众多小姐姐“请回家”，就要开始相位猛冲的时候，却发现我们无法迅速且准确的找到当前最想看到的资源。面对硬盘里面浩如烟海、文件命名乱得一比的情况，连佛陀也忍不住闭上了眼睛。为了解决这一大问题，我们就需要用一点“小手段”来让资源规规矩矩的摆放好。而emby/jellyfin之类的影音管理软件绝对是不二之选！\n——看着AV海报墙太有成就感了。\n因此本文会达成以下两个目标：\n使用JavSP为自己的~~弹药库~~影片分类、刮削海报封面 将已经整理好的影片让emby识别且管理 配置JavSP 面对硬盘里面几十上百部片子，我们不可能手动一个一个去收集每一个影片的相关信息，我们需要一个更加高效的工具来代替手工劳作，在此，我推荐使用JavSP。\n​\n这是一个强大的AV元数据刮削收集工具，配置好以后，只需动动手指选择好你存放毛片的文件夹，然后等上一杯茶的功夫，就能让乱七八糟的片子乖乖的躺在它应该在的地方。\n接下来用window进行演示（我个人就是用winnas，图形化页面太香了）。\n我们进入releases，把最新版本下载下来，解压并放置到任意地方。\n在开始之前，我们需要对JavSP进行设置，让它在刮削好数据的时候能自动分类，我们用任意编辑器进入config.ini（我这里用了window自带的记事本）,找到这里\n我们需要对红框标出的几个地方进行更改。\n​media_servers​\n这里是选择我们的影音媒体库管理软件，这一步会影响到我们的刮削下来元数据文件的结构和命名。因为我们后面用emby进行管理，而jellyfin其实就是截取字emby某个开源版本做成的软件，因此我们在这里输入jellyfin。\n​save_dir​\n影片自动整理、分门别类的路径，我们需要提前在这里设置好文件夹规则。在这里带$的其实就是文件夹命名的变量。\n$actress #演员，即女优 $title #影片名称，不是番号 $num #这个才是番号 $year #影片发行年份 $date #影片发行日期，顺序为年月日 $director #导演 $label #番号系列，比如SSIS-816的SSIS $serial #影片系列 $producer #影片制作商 $publisher #影片发行商 $censor #有码无码，步兵还是骑兵，被破解成无码的影片实际上在各个站点其实还是为有码，因此无码破解获得的元数据是有码的 $score #影片评分 如果你设定的规则里面带有不变的变量，那么变量本身最好用{}括起来，比如设置一个规则为$num_2023，在这里2023也被跟着算作变量了，因此实际应该写为{$num}2023。\n在这里我会把文件夹规则变成女优名/影片名 - 女优名 [番号] [发行年份]，因此我的路径规则则是$actress/$title - $actress [$num] [$year]。\n你可以按需搭配，按xp分类也不是不行\n​filename​\n这里是影片重命名变量设置，变量设置其实和上面的save_dir变量设置一样，我这里只是简单用个番号$num即可，各位可以按需搭配。\n​output_folder​\n整理完成的影片会统一放在output_folder设置的文件夹之下，该文件夹会生成在你识别影片时所选择的文件夹之下。\n​max_path_len​\n允许的最长文件路径，这个数值在刮削的影片名/女优名称太长/太多的时候有用，但是一般默认设置足以对付\n​max_actress_count​\n重命名的时候最多出现多少个女优$actress，默认的10也够了 ~~，我还没见过10名以上的女优参演同一部片子，如果有的话请分享一下~~​ 。\n影片识别的注意事项 已经设置好JavSP后，我们还不能进行开始刮削还需要对网络和原始影片进行确认。\n网络 由于我国算半个大内网的特殊网络环境，因此如果是在国内，请开启代理。JavSP所刮削的源站点在国内正常都是无法访问的，不开启代理会报错。最好是开启日本节点。\n——这就是AV大国！\n影片名称确认 JavSP是靠影片文件名称中的番号来进行刮削的，因此在开始刮削之前，文件名需要包含一个可以清晰识别到的番号，比如\n​食系スイーツ男子”が出会って滅茶苦茶ヤリまくって… 憧れだったあの娘と 基地啊加蒂斯较大SSIS-816-UC.mp4​\n这种程度识别是没有问题的。\n现在，我们启动​JavSP.exe​ ，选择你放置了需要刮削元数据的AV的文件夹，它就会对该目录下的所有视频进行挨个识别刮削了，等几分钟就可以全部刮削完毕。\n安装设置EMBY 正如前文所述，我们是选择使用emby/jellyfin来进行影片的管理，因此我们还需要对emby进行安装以及设置。以下用emby为例子，jellyfin也可以作为参考。\n安装EMBY 以windows系统为例子（其他操作系统的需要你们自己去找，是在不行统一使用docker版本），进入EMBY官网下载页面，选择window，点击Download Emby Server，直接安装即可。安装过程中可能需要打开代理软件 （大内网环境其实有时候真的挺麻烦的） 解决资源下载的网络问题。\n安装完成后，我们在浏览器输入emby机器的​ip:8096​端口进行初始化设置。\n选择Chinese，点击next，然后刷新以下，应该就可以变成中文。\n设置管理员的用户密码，此账户拥有最高的权限。\n然后一路点下一个就完事了。\n设置AV媒体库 此时我们选择登陆刚刚建立的账户，接着点击右上角的齿轮图标，建立一个新的媒体库。\n媒体库类型选择为电影，名称随意，文件夹为你存放刚刚刮削分类好AV的总文件夹。元数据语言、分级国家、图像下载语言全部选择Japanese。点开右上角的，把优先使用内嵌名称启用。\n剩下的的可以按照图片来设置\n视频预览缩略图按需处理，我习惯打开。拉动进度条的时候可以查看缩略图，对于心急想要开快车的司机可以定位时间点。\n进行了这一串设置后，我们就可以看到emby开始扫描文件并加载元数据了。等上一会我们就可以看到一个专属于你的AV海报墙！\n如此，我们的海报墙便是初步完成。看着整齐划一的海报封面，不由得心潮澎湃\n——和我整理一辈子的海报墙吧。\n补充元数据 其实JavSP的元数据只能识别到影片的海报和封面，无法下载女优的图片；emby自带的刮削也是完全无法令我们满足，因此我们需要人工收集各个~~老师~~女优的图片。那么哪里可以收集到大量的图片呢？\n答案是推特。作为一个主打社交和微博用处的网站，上面入驻了众多女优，能叫得上号的几乎都在上面，而大尺度的图片上传也使得我们可以在上面找到相当过激的图片来作为我们的emby中对女优的图片数据 （重点）。\n我们需要在推特的搜索框中输入#女优的名称，日本名和中文名都这样搜一次。这样相关的tag就会完全展示出来，你可以从这些图片中挑选一份~~大尺度~~看着还可以的图片来上传到emby中\n然后上传一份你下载好的图片（最好是竖屏的）上传即可\n效果如图\n前文说过，由于特殊网络原因，我们刮削其实有相当概率是不成功的，不单单是JavSP，emby也是一样，因此我推荐修改hosts来解决这一难题。毕竟代理虽好，但是流量还是要钱的 ~~（富哥除外）~~​ 。\n尾声 到这里本片教程给其实也差不多该结束了，我们可以满意的点开emby，任君挑选一部适合的片子，来一场 “魔导探索” 。\n当完成激动人心的海报墙，我竟陷入了空虚之中，原来是折腾搭建的乐趣，早已超过了看片的乐趣。\n于是我关闭了电脑，掏出手机，继续打开MyGo二创，细细品尝马小花儿的《群星》。\n——比起贤者时刻不想打开A片，我还是go一辈子吧。\n​\n","date":1734870728,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1758717469,"objectID":"5bc9ed3d4f61f7c14173a283080e7420","permalink":"https://cyilin36.github.io/post/%E5%88%A9%E7%94%A8javsp+emby%E6%89%93%E9%80%A0%E4%B8%93%E5%B1%9E%E7%9A%84%E6%AF%9B%E7%89%87%E5%BD%B1%E9%9F%B3%E5%BA%93/","publishdate":"2024-12-22T20:32:08+08:00","relpermalink":"/post/%E5%88%A9%E7%94%A8javsp+emby%E6%89%93%E9%80%A0%E4%B8%93%E5%B1%9E%E7%9A%84%E6%AF%9B%E7%89%87%E5%BD%B1%E9%9F%B3%E5%BA%93/","section":"post","summary":"瑟瑟才是第一动力来源","tags":["影音","AV","emby"],"title":"利用JavSP+EMBY打造专属的毛片影音库","type":"post"}]